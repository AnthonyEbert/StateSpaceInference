
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.2.8

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores() - 1)
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(2)
> 
> TT <- 40
> true_theta <- c(0.25, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <-cumsum(rnorm(TT))
> 
> lambda_fun <- stepfun(seq(1, TT - 1, by = 1), y = true_states)
> # kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> # y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> # y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> y <- generate_simple(TT, true_states, true_theta)
> 
> plot(seq(0, TT, length.out = TT * 10), unlist(y))
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   y = y
+ )
> 
> loss = loss_simple
> 
> 
> Ntheta = 1000
> Nx = 10000
> pacc = 0.05
> 
> lower_theta <- c(0.1, 0.2)
> upper_theta <- c(0.5, 0.8)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = function(x){dunif(x[1], 0.1, 0.5)*dunif(x[2],0.2,0.8)}, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 1, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.1000092 0.1853677 0.2670531 0.3618748 0.4996287
[1] 0.2002003 0.3601841 0.4998038 0.6412627 0.7999193
[1] "1. 943.683939623464"
[1] 0.1000092 0.1804069 0.2575445 0.3498111 0.4996287
[1] 0.2002003 0.3800189 0.5234684 0.6633929 0.7999193
[1] "2. 892.540852765553"
[1] 0.1000092 0.1811552 0.2531845 0.3364820 0.4996287
[1] 0.2002003 0.3771907 0.5131393 0.6558632 0.7999193
[1] "3. 849.638478509453"
[1] 0.1000092 0.1820474 0.2432967 0.3144152 0.4996287
[1] 0.2002003 0.3779985 0.5119351 0.6532389 0.7999193
[1] "4. 767.2250071452"
[1] 0.1000092 0.1888719 0.2476711 0.3105553 0.4996287
[1] 0.2002003 0.3657922 0.4998038 0.6396479 0.7999193
[1] "5. 732.501063741546"
[1] 0.1000092 0.1909857 0.2487279 0.3125486 0.4996287
[1] 0.2002003 0.4098683 0.5499165 0.6765269 0.7999193
[1] "6. 681.688378826258"
[1] 0.1000092 0.1879027 0.2403242 0.3028254 0.4996287
[1] 0.2002003 0.3915470 0.5234684 0.6614620 0.7999193
[1] "7. 666.5718192955"
[1] 0.1000092 0.2057197 0.2550054 0.3101748 0.4996287
[1] 0.2002003 0.3778437 0.5049301 0.6405612 0.7999193
[1] "8. 647.302009589671"
[1] 0.1000092 0.2106777 0.2614362 0.3148823 0.4996287
[1] 0.2002003 0.3971337 0.5280717 0.6614620 0.7999193
[1] "9. 621.925198661813"
[1] 0.1000092 0.2178454 0.2674823 0.3155088 0.4996287
[1] 0.2002003 0.4045768 0.5345998 0.6658148 0.7999193
[1] "10. 567.921488667616"
[1] 0.1000092 0.2196456 0.2691805 0.3176862 0.4996287
[1] 0.2002003 0.4505233 0.5758536 0.6832228 0.7999193
[1] "11. 511.347591266132"
[1] 0.1000092 0.2199191 0.2676014 0.3144152 0.4996287
[1] 0.2002003 0.3942794 0.5120356 0.6440158 0.7999193
[1] "12. 553.556469322256"
[1] 0.1000092 0.2300803 0.2749943 0.3188109 0.4996287
[1] 0.2002003 0.4108886 0.5345998 0.6628209 0.7999193
[1] "13. 504.415792368415"
[1] 0.1000092 0.2287434 0.2721411 0.3148823 0.4996287
[1] 0.2002003 0.4404932 0.5596971 0.6748969 0.7999193
[1] "14. 463.897096251624"
[1] "resample"
[1] 0.1165202 0.2231911 0.2682997 0.3105505 0.5059586
[1] 0.1790083 0.4389659 0.5601487 0.6736282 0.9306059
[1] "SMC:  985.542199624622"
[1] 0.1165202 0.2222951 0.2659245 0.3077507 0.5059586
[1] 0.1790083 0.4574010 0.5795430 0.6853406 0.9306059
[1] "SMC:  960.310096161568"
[1] 0.1165202 0.2226713 0.2655966 0.3048838 0.5059586
[1] 0.1790083 0.4520818 0.5751351 0.6795497 0.9306059
[1] "SMC:  953.37748841261"
[1] 0.1165202 0.2222033 0.2628416 0.2987186 0.5059586
[1] 0.1790083 0.4519503 0.5731566 0.6792051 0.9306059
[1] "SMC:  924.736247735027"
[1] 0.1165202 0.2232642 0.2639330 0.2978419 0.5059586
[1] 0.1790083 0.4419631 0.5596473 0.6683501 0.9306059
[1] "SMC:  918.124130261894"
[1] 0.1165202 0.2255802 0.2641157 0.2987186 0.5059586
[1] 0.1790083 0.4823260 0.5947567 0.6945996 0.9306059
[1] "SMC:  870.276001730127"
[1] 0.1165202 0.2226713 0.2610191 0.2946730 0.5059586
[1] 0.1790083 0.4644676 0.5781951 0.6796766 0.9306059
[1] "SMC:  876.154134731886"
[1] 0.1165202 0.2294275 0.2659245 0.2984507 0.5059586
[1] 0.1790083 0.4486547 0.5632676 0.6666150 0.9306059
[1] "SMC:  885.950247580986"
[1] 0.1165202 0.2329089 0.2682997 0.3011612 0.5059586
[1] 0.1790083 0.4674520 0.5814105 0.6793404 0.9306059
[1] "SMC:  867.135103132385"
[1] 0.1165202 0.2364865 0.2700305 0.3020750 0.5059586
[1] 0.1790083 0.4777363 0.5902019 0.6820873 0.9306059
[1] "SMC:  836.079907752447"
[1] 0.1165202 0.2372133 0.2704247 0.3021713 0.5059586
[1] 0.1790083 0.5013331 0.6138234 0.7002175 0.9306059
[1] "SMC:  768.333501616317"
[1] 0.1165202 0.2367027 0.2704247 0.3002172 0.5059586
[1] 0.1790083 0.4602407 0.5688551 0.6676033 0.9306059
[1] "SMC:  835.677217734354"
[1] 0.1165202 0.2422004 0.2746825 0.3048615 0.5059586
[1] 0.1790083 0.4804719 0.5884350 0.6792051 0.9306059
[1] "SMC:  797.702530634684"
[1] 0.1165202 0.2411481 0.2732267 0.3021079 0.5059586
[1] 0.1790083 0.4944042 0.6008107 0.6898757 0.9306059
[1] "SMC:  756.783554853329"
acceptance rate:  0.737 
[1] 0.1697704 0.2483589 0.2712546 0.2955493 0.4910246
[1] 0.2469853 0.5329806 0.6223151 0.6911514 0.7984185
[1] "15. 992.578325109994"
[1] 0.1697704 0.2462545 0.2696984 0.2940612 0.4910246
[1] 0.2469853 0.5410810 0.6229173 0.6940892 0.7984185
[1] "16. 982.13878001992"
[1] 0.1697704 0.2461235 0.2696984 0.2944015 0.4910246
[1] 0.2469853 0.5737701 0.6437278 0.7108987 0.7984185
[1] "17. 953.618845309914"
[1] 0.1697704 0.2429449 0.2665005 0.2899187 0.4910246
[1] 0.2469853 0.5781951 0.6479676 0.7133691 0.7984185
[1] "18. 914.710495359292"
[1] 0.1697704 0.2430985 0.2665005 0.2884281 0.4910246
[1] 0.2469853 0.5640083 0.6349903 0.7024905 0.7984185
[1] "19. 931.490770103966"
[1] 0.1697704 0.2429412 0.2657452 0.2858664 0.4910246
[1] 0.2469853 0.5622213 0.6338139 0.7001841 0.7984185
[1] "20. 919.518865195732"
[1] 0.1697704 0.2422792 0.2656610 0.2852818 0.4910246
[1] 0.2469853 0.5343240 0.6221218 0.6841720 0.7984185
[1] "21. 919.172144032068"
[1] 0.1697704 0.2431227 0.2657504 0.2852818 0.4910246
[1] 0.2469853 0.5238614 0.6123946 0.6795497 0.7984185
[1] "22. 911.94082920215"
[1] 0.1697704 0.2422004 0.2646651 0.2839841 0.4910246
[1] 0.2469853 0.5314024 0.6192552 0.6820873 0.7984185
[1] "23. 886.493485415877"
[1] 0.1697704 0.2422792 0.2646651 0.2842642 0.4910246
[1] 0.2469853 0.5013331 0.5944897 0.6625510 0.7984185
[1] "24. 837.376732665019"
[1] 0.1697704 0.2422792 0.2652269 0.2842642 0.4910246
[1] 0.2469853 0.5091750 0.6054133 0.6676588 0.7984185
[1] "25. 866.201613028539"
[1] 0.1697704 0.2422792 0.2646651 0.2842642 0.4910246
[1] 0.2469853 0.5045396 0.5975364 0.6631022 0.7984185
[1] "26. 843.222103008598"
[1] 0.1697704 0.2413051 0.2630439 0.2826013 0.4910246
[1] 0.2469853 0.5052164 0.6012114 0.6656152 0.7984185
[1] "27. 822.513601887457"
[1] 0.1697704 0.2422004 0.2637112 0.2828104 0.4910246
[1] 0.2469853 0.5052164 0.6012114 0.6656121 0.7984185
[1] "28. 823.454846182989"
[1] 0.1697704 0.2409578 0.2618798 0.2825750 0.4910246
[1] 0.2469853 0.5022083 0.5947567 0.6618321 0.7984185
[1] "29. 795.074008054796"
[1] 0.1697704 0.2429412 0.2640703 0.2828190 0.4910246
[1] 0.2469853 0.4967829 0.5902019 0.6546163 0.7984185
[1] "30. 779.608088451934"
[1] 0.1697704 0.2422004 0.2622083 0.2825750 0.4910246
[1] 0.2469853 0.4860302 0.5834574 0.6480981 0.7984185
[1] "31. 721.820790606246"
[1] 0.1697704 0.2429449 0.2640703 0.2826013 0.4910246
[1] 0.2469853 0.4990623 0.5906441 0.6546163 0.7984185
[1] "32. 772.068845882288"
[1] 0.1697704 0.2447850 0.2643840 0.2828190 0.4910246
[1] 0.2469853 0.4854815 0.5799804 0.6440158 0.7984185
[1] "33. 715.641626569214"
[1] 0.1697704 0.2452279 0.2652269 0.2829655 0.4910246
[1] 0.2469853 0.4922298 0.5866094 0.6519611 0.7984185
[1] "34. 750.651966974856"
[1] 0.1697704 0.2452004 0.2641157 0.2828056 0.4910246
[1] 0.2469853 0.4847659 0.5795430 0.6429728 0.7984185
[1] "35. 698.104894801254"
[1] 0.1697704 0.2430985 0.2623728 0.2821424 0.4910246
[1] 0.2469853 0.4828502 0.5767293 0.6349903 0.7984185
[1] "36. 664.493849528271"
[1] 0.1697704 0.2437590 0.2628551 0.2821424 0.4910246
[1] 0.2469853 0.4881787 0.5830528 0.6461562 0.7984185
[1] "37. 692.449832189669"
[1] 0.1697704 0.2437590 0.2637112 0.2822954 0.4910246
[1] 0.2469853 0.4997148 0.5915056 0.6526039 0.7984185
[1] "38. 738.128596434288"
[1] 0.1697704 0.2452004 0.2640703 0.2825750 0.4910246
[1] 0.2469853 0.4845643 0.5753553 0.6342877 0.7984185
[1] "39. 659.108671731921"
[1] 0.1697704 0.2429412 0.2611628 0.2806662 0.4910246
[1] 0.2469853 0.4796156 0.5567131 0.6245928 0.7984185
[1] "40. 597.299229756588"
There were 50 or more warnings (use warnings() to see the first 50)
> 
> state_df <- get_state(full_list)
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
      user     system    elapsed 
103011.952   1010.299   7386.584 
