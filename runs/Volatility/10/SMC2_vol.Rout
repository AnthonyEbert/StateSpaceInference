
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(StateSpaceInference)
> library(parallel)
> library(ggplot2)
> library(ggalt)
> 
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0                ggplot2_3.1.1             
[3] StateSpaceInference_1.2.10

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.1         Rttf2pt1_1.3.7     magrittr_1.5       maps_3.3.0        
 [5] MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0      colorspace_1.4-1  
 [9] R6_2.4.0           rlang_0.4.0        plyr_1.8.4         dplyr_0.8.0.1     
[13] grid_3.5.1         gtable_0.3.0       ash_1.0-15         KernSmooth_2.23-15
[17] extrafontdb_1.0    withr_2.1.2        proj4_1.0-8        lazyeval_0.2.2    
[21] assertthat_0.2.1   tibble_2.1.1       crayon_1.3.4       RColorBrewer_1.1-2
[25] purrr_0.3.2        glue_1.3.1         compiler_3.5.1     pillar_1.4.0      
[29] scales_1.0.0       extrafont_0.17     pkgconfig_2.0.2   
> set.seed(1)
> 
> #cl <- makeCluster(parallel::detectCores() - 1)
> cl = "mclapply"
> #cl <- NULL
> 
> # length of the time series
> TT <- 60
> # parameters
> alpha <- 2; beta <- 0; gamma <- sqrt(2 * 0.1)/2; mu <- -0.2; phi <- 0.95; sh <- 0.6; s_v <- 1
> # simulating the hidden states
> h <- rep(0, TT)
> h[1] <- rnorm(1, mu, sh/(sqrt(1-phi^2)))
> for (t in 2:TT) {
+   h[t] <- mu + phi * (h[t - 1]) + sh * rnorm(1)
+ }
> 
> # emission of the observations
> yobs <- exp(h/2) * rnorm(TT, s_v, 0.1)
> 
> 
> true_states <- h
> 
> inp <- list(
+   alpha = alpha,
+   beta = beta,
+   gamma = gamma,
+   mu = mu,
+   s_h = sh,
+   s_v = s_v,
+   y = yobs
+ )
> 
> Ntheta <- 160
> Nx <- 50000
> pacc = 0.005
> 
> prior_sample <- data.frame(rprior_vol(Ntheta))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 1)
> 
> trans <- function(x, trans_args){
+   theta1 <- qnorm((x + 1)/2)
+   return(theta1)
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- 2*pnorm(x) - 1
+   return(theta1)
+ }
> 
> acceptance_correction <- function(x){
+   0.5/(dnorm(qnorm((x+1)/2)))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dprior_vol, loss = loss_volatility, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 1, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.5, acceptance_correction = acceptance_correction)
[1] -0.9444258 -0.5472384 -0.1261378  0.4055575  0.9921547
[1] "1. 148.253372214724"
[1] -0.9444258 -0.2968532  0.3123246  0.6633434  0.9921547
[1] "2. 115.5885450467"
[1] -0.9444258  0.3292365  0.6268704  0.7729175  0.9921547
[1] "3. 61.4268075372686"
[1] "resample"
[1] -0.9869453  0.1967768  0.5569440  0.7702049  0.9955458
[1] "SMC:  139.100724247105"
[1] -0.9869453  0.4267051  0.6968910  0.8107128  0.9955458
[1] "SMC:  124.030535959414"
[1] -0.9869453  0.6646573  0.7676348  0.8465635  0.9955458
[1] "SMC:  99.1183982482519"
acceptance rate:  0.73125 
[1] 0.3416469 0.7006583 0.7776114 0.8242570 0.9582844
[1] "4. 158.762635769341"
[1] 0.3416469 0.7006583 0.7814191 0.8252827 0.9582844
[1] "5. 157.63083639167"
[1] 0.3416469 0.7332810 0.7875259 0.8390824 0.9582844
[1] "6. 154.361361383099"
[1] 0.3416469 0.7527320 0.7889869 0.8426446 0.9582844
[1] "7. 147.291413785544"
[1] 0.3416469 0.7332810 0.7875259 0.8390824 0.9582844
[1] "8. 149.463578905913"
[1] 0.3416469 0.7332810 0.7875259 0.8252827 0.9582844
[1] "9. 148.363076842406"
[1] 0.3416469 0.7332810 0.7842661 0.8252827 0.9582844
[1] "10. 147.235743778386"
[1] 0.3416469 0.7187594 0.7842661 0.8242570 0.9582844
[1] "11. 146.124010327727"
[1] 0.3416469 0.7187594 0.7814191 0.8242570 0.9582844
[1] "12. 145.398263602313"
[1] 0.3416469 0.7187594 0.7842661 0.8242570 0.9582844
[1] "13. 144.40191371241"
[1] 0.3416469 0.7429402 0.7875259 0.8390824 0.9582844
[1] "14. 141.440812787366"
[1] 0.3416469 0.7676348 0.7949151 0.8426446 0.9582844
[1] "15. 134.739589981472"
[1] 0.3416469 0.7702049 0.7949151 0.8465635 0.9582844
[1] "16. 130.155405376401"
[1] 0.3416469 0.7734605 0.8107128 0.8465635 0.9582844
[1] "17. 123.229323875509"
[1] 0.3416469 0.7734605 0.7949151 0.8465635 0.9582844
[1] "18. 122.121027588344"
[1] 0.3416469 0.7734605 0.7949151 0.8426446 0.9582844
[1] "19. 122.553133576126"
[1] 0.3416469 0.7734605 0.7949151 0.8426446 0.9582844
[1] "20. 122.237025297829"
[1] 0.3416469 0.7702049 0.7918834 0.8423188 0.9582844
[1] "21. 122.070809558977"
[1] 0.3416469 0.7676348 0.7875259 0.8390824 0.9582844
[1] "22. 123.664460799399"
[1] 0.3416469 0.7676348 0.7875259 0.8252827 0.9582844
[1] "23. 123.494692830683"
[1] 0.3416469 0.7702049 0.7918834 0.8390824 0.9582844
[1] "24. 120.669633848396"
[1] 0.3416469 0.7702049 0.7949151 0.8423188 0.9582844
[1] "25. 119.014837574009"
[1] 0.3416469 0.7734605 0.7949151 0.8423188 0.9582844
[1] "26. 116.441238949857"
[1] 0.3416469 0.7734605 0.7949151 0.8426446 0.9582844
[1] "27. 113.637276192564"
[1] 0.3416469 0.7776114 0.8126066 0.8465635 0.9582844
[1] "28. 106.108139597685"
[1] 0.3416469 0.7875259 0.8242570 0.8530798 0.9582844
[1] "29. 95.0541124135826"
[1] 0.3416469 0.7949151 0.8390824 0.8555026 0.9582844
[1] "30. 86.9973160417329"
[1] 0.3416469 0.7949151 0.8252827 0.8547904 0.9582844
[1] "31. 85.6082313670676"
[1] 0.3416469 0.7949151 0.8252827 0.8547904 0.9582844
[1] "32. 84.5072880918531"
[1] 0.3416469 0.7949151 0.8252827 0.8530798 0.9582844
[1] "33. 83.2105062065529"
[1] 0.3416469 0.7949151 0.8390824 0.8547904 0.9582844
[1] "34. 81.146690698098"
[1] 0.3416469 0.8107128 0.8426446 0.8569665 0.9582844
[1] "35. 74.9136573988834"
[1] "resample"
[1] 0.6019349 0.7815748 0.8225497 0.8524584 0.9693551
[1] "SMC:  146.581880107267"
[1] 0.6019349 0.7828750 0.8232860 0.8553292 0.9693551
[1] "SMC:  148.07306924718"
[1] 0.6019349 0.7872580 0.8250990 0.8597133 0.9693551
[1] "SMC:  150.45893133619"
[1] 0.6019349 0.7832054 0.8237870 0.8553292 0.9693551
[1] "SMC:  147.015601993706"
[1] 0.6019349 0.7832054 0.8237870 0.8550447 0.9693551
[1] "SMC:  145.537633106419"
[1] 0.6019349 0.7872580 0.8250990 0.8553292 0.9693551
[1] "SMC:  145.979198802758"
[1] 0.6019349 0.7909558 0.8280723 0.8597133 0.9693551
[1] "SMC:  146.726729746369"
[1] 0.6019349 0.7842371 0.8238446 0.8524584 0.9693551
[1] "SMC:  142.464347459435"
[1] 0.6019349 0.7832054 0.8232860 0.8504688 0.9693551
[1] "SMC:  139.869480387059"
[1] 0.6019349 0.7828750 0.8227527 0.8489548 0.9693551
[1] "SMC:  138.146829001955"
[1] 0.6019349 0.7815748 0.8206208 0.8434761 0.9693551
[1] "SMC:  134.431330973944"
[1] 0.6019349 0.7813431 0.8197432 0.8433851 0.9693551
[1] "SMC:  132.783086399446"
[1] 0.6019349 0.7813431 0.8197432 0.8433851 0.9693551
[1] "SMC:  131.063007037342"
[1] 0.6019349 0.7842371 0.8232860 0.8504688 0.9693551
[1] "SMC:  135.233476533072"
[1] 0.6019349 0.7901607 0.8262018 0.8553292 0.9693551
[1] "SMC:  137.473452577247"
[1] 0.6019349 0.7945491 0.8277497 0.8559823 0.9693551
[1] "SMC:  137.147309005784"
[1] 0.6019349 0.8028250 0.8314830 0.8597133 0.9693551
[1] "SMC:  137.177763438707"
[1] 0.6019349 0.7970795 0.8280723 0.8591847 0.9693551
[1] "SMC:  134.814188348619"
[1] 0.6019349 0.7945491 0.8262018 0.8550447 0.9693551
[1] "SMC:  132.481699467846"
[1] 0.6019349 0.7945491 0.8250990 0.8524584 0.9693551
[1] "SMC:  130.847899285418"
[1] 0.6019349 0.7901607 0.8237870 0.8471468 0.9693551
[1] "SMC:  128.107893905817"
[1] 0.6019349 0.7856329 0.8212528 0.8434761 0.9693551
[1] "SMC:  125.123014744421"
[1] 0.6019349 0.7842371 0.8210079 0.8428691 0.9693551
[1] "SMC:  123.891716756216"
[1] 0.6019349 0.7872580 0.8227527 0.8434761 0.9693551
[1] "SMC:  126.104277846361"
[1] 0.6019349 0.7872580 0.8227527 0.8456804 0.9693551
[1] "SMC:  126.442423134943"
[1] 0.6019349 0.7901607 0.8232860 0.8471468 0.9693551
[1] "SMC:  126.76911089029"
[1] 0.6019349 0.7901607 0.8237870 0.8471468 0.9693551
[1] "SMC:  127.247237703393"
[1] 0.6019349 0.8036837 0.8314368 0.8559823 0.9693551
[1] "SMC:  130.033003544946"
[1] 0.6019349 0.8123981 0.8359278 0.8682540 0.9693551
[1] "SMC:  130.026591497342"
[1] 0.6019349 0.8193813 0.8395219 0.8736538 0.9693551
[1] "SMC:  126.605304882465"
[1] 0.6019349 0.8173388 0.8392733 0.8718517 0.9693551
[1] "SMC:  124.717752175404"
[1] 0.6019349 0.8167373 0.8391866 0.8701598 0.9693551
[1] "SMC:  123.659970161204"
[1] 0.6019349 0.8167373 0.8391866 0.8701598 0.9693551
[1] "SMC:  122.464245262939"
[1] 0.6019349 0.8194337 0.8395219 0.8718517 0.9693551
[1] "SMC:  120.925353408273"
[1] 0.6019349 0.8227527 0.8428691 0.8743020 0.9693551
[1] "SMC:  116.651336477862"
acceptance rate:  0.78125 
[1] 0.7295384 0.8242570 0.8489548 0.8725334 0.9418695
[1] "36. 154.90522898091"
[1] 0.7295384 0.8359278 0.8553292 0.8769011 0.9418695
[1] "37. 136.755693158644"
[1] 0.7295384 0.8395219 0.8595625 0.8823216 0.9418695
[1] "38. 116.845545076027"
[1] 0.7295384 0.8412425 0.8604874 0.8829476 0.9418695
[1] "39. 113.234058299575"
[1] 0.7295384 0.8395219 0.8591847 0.8823216 0.9418695
[1] "40. 118.983911412268"
[1] 0.7295384 0.8412425 0.8595625 0.8823216 0.9418695
[1] "41. 113.778159325036"
[1] 0.7295384 0.8428691 0.8625628 0.8847158 0.9418695
[1] "42. 107.66215199275"
[1] 0.7295384 0.8465635 0.8630930 0.8847158 0.9418695
[1] "43. 103.017691370617"
[1] 0.7295384 0.8433851 0.8625628 0.8829476 0.9418695
[1] "44. 107.219888254893"
[1] 0.7295384 0.8466651 0.8680107 0.8847158 0.9418695
[1] "45. 98.1347612438886"
[1] 0.7295384 0.8489548 0.8701598 0.8847158 0.9418695
[1] "46. 90.0948188976773"
[1] 0.7295384 0.8489548 0.8725334 0.8847158 0.9418695
[1] "47. 84.7945273638304"
[1] 0.7295384 0.8489548 0.8725334 0.8847158 0.9418695
[1] "48. 88.7057580207892"
[1] 0.7295384 0.8504688 0.8725334 0.8847158 0.9418695
[1] "49. 84.7811686054379"
[1] 0.7295384 0.8489548 0.8701598 0.8847158 0.9418695
[1] "50. 91.0850468669115"
[1] 0.7295384 0.8489548 0.8701598 0.8847158 0.9418695
[1] "51. 89.5141710234448"
[1] 0.7295384 0.8524584 0.8725334 0.8847158 0.9418695
[1] "52. 83.7516273862516"
[1] 0.7295384 0.8524584 0.8725334 0.8847158 0.9418695
[1] "53. 86.3801697601819"
[1] 0.7295384 0.8553292 0.8736538 0.8854825 0.9418695
[1] "54. 75.9063156128497"
[1] "resample"
[1] 0.7529146 0.8375665 0.8662523 0.8911353 0.9592002
[1] "SMC:  143.98970846204"
[1] 0.7529146 0.8381164 0.8662523 0.8918193 0.9592002
[1] "SMC:  144.61902318217"
[1] 0.7529146 0.8417348 0.8679755 0.8928991 0.9592002
[1] "SMC:  147.440535352112"
[1] 0.7529146 0.8375665 0.8662523 0.8911353 0.9592002
[1] "SMC:  142.892589690402"
[1] 0.7529146 0.8375665 0.8655051 0.8911353 0.9592002
[1] "SMC:  141.327445954076"
[1] 0.7529146 0.8381164 0.8662523 0.8918193 0.9592002
[1] "SMC:  143.566917711533"
[1] 0.7529146 0.8417348 0.8679755 0.8928991 0.9592002
[1] "SMC:  145.829411920318"
[1] 0.7529146 0.8334450 0.8635532 0.8860603 0.9592002
[1] "SMC:  137.485616727268"
[1] 0.7529146 0.8334450 0.8633789 0.8859563 0.9592002
[1] "SMC:  135.189626145385"
[1] 0.7529146 0.8327101 0.8630136 0.8857839 0.9592002
[1] "SMC:  132.673343924356"
[1] 0.7529146 0.8298320 0.8591327 0.8843780 0.9592002
[1] "SMC:  128.082320158678"
[1] 0.7529146 0.8283162 0.8585353 0.8843780 0.9592002
[1] "SMC:  126.389651877366"
[1] 0.7529146 0.8283162 0.8585353 0.8838818 0.9592002
[1] "SMC:  125.396860556407"
[1] 0.7529146 0.8334450 0.8630136 0.8859563 0.9592002
[1] "SMC:  132.425228263729"
[1] 0.7529146 0.8375665 0.8655051 0.8869190 0.9592002
[1] "SMC:  136.069550116334"
[1] 0.7529146 0.8381164 0.8655051 0.8869190 0.9592002
[1] "SMC:  135.714413625896"
[1] 0.7529146 0.8398371 0.8670223 0.8905025 0.9592002
[1] "SMC:  138.124037936225"
[1] 0.7529146 0.8381164 0.8655051 0.8860603 0.9592002
[1] "SMC:  134.199133977161"
[1] 0.7529146 0.8334450 0.8630136 0.8855745 0.9592002
[1] "SMC:  129.515446976136"
[1] 0.7529146 0.8327101 0.8593809 0.8843780 0.9592002
[1] "SMC:  125.444834614518"
[1] 0.7529146 0.8298320 0.8585353 0.8836080 0.9592002
[1] "SMC:  120.66464261831"
[1] 0.7529146 0.8283162 0.8559119 0.8827571 0.9592002
[1] "SMC:  115.390735598434"
[1] 0.7529146 0.8281998 0.8546330 0.8827567 0.9592002
[1] "SMC:  113.288150577415"
[1] 0.7529146 0.8298320 0.8562763 0.8827665 0.9592002
[1] "SMC:  117.097426910898"
[1] 0.7529146 0.8298320 0.8562763 0.8827665 0.9592002
[1] "SMC:  116.8989897852"
[1] 0.7529146 0.8316006 0.8579730 0.8831429 0.9592002
[1] "SMC:  116.806826954525"
[1] 0.7529146 0.8327101 0.8579730 0.8831429 0.9592002
[1] "SMC:  117.431123662871"
[1] 0.7529146 0.8381164 0.8634066 0.8855745 0.9592002
[1] "SMC:  123.990913875734"
[1] 0.7529146 0.8441539 0.8680962 0.8905025 0.9592002
[1] "SMC:  130.297549086562"
[1] 0.7529146 0.8481414 0.8724927 0.8928991 0.9592002
[1] "SMC:  131.166698481927"
[1] 0.7529146 0.8467816 0.8703865 0.8911353 0.9592002
[1] "SMC:  128.762120222363"
[1] 0.7529146 0.8458961 0.8680962 0.8905025 0.9592002
[1] "SMC:  128.245317877806"
[1] 0.7529146 0.8458961 0.8679755 0.8869190 0.9592002
[1] "SMC:  125.885520160831"
[1] 0.7529146 0.8467816 0.8702595 0.8905025 0.9592002
[1] "SMC:  126.072523797679"
[1] 0.7529146 0.8506494 0.8745263 0.8939456 0.9592002
[1] "SMC:  127.749082335378"
[1] 0.7529146 0.8540473 0.8780112 0.8955635 0.9592002
[1] "SMC:  128.689938408917"
[1] 0.7529146 0.8616907 0.8833356 0.9003129 0.9592002
[1] "SMC:  125.25316433638"
[1] 0.7529146 0.8662523 0.8855745 0.9014686 0.9592002
[1] "SMC:  121.337009677263"
[1] 0.7529146 0.8670223 0.8855745 0.9012814 0.9592002
[1] "SMC:  118.327387849625"
[1] 0.7529146 0.8655051 0.8843780 0.9003129 0.9592002
[1] "SMC:  115.98333734033"
[1] 0.7529146 0.8658845 0.8851837 0.9004703 0.9592002
[1] "SMC:  114.40303286192"
[1] 0.7529146 0.8673116 0.8855745 0.9006528 0.9592002
[1] "SMC:  115.480121876464"
[1] 0.7529146 0.8679755 0.8857839 0.9012814 0.9592002
[1] "SMC:  114.194145899148"
[1] 0.7529146 0.8670223 0.8851837 0.9004703 0.9592002
[1] "SMC:  114.17623730773"
[1] 0.7529146 0.8680962 0.8859563 0.9012814 0.9592002
[1] "SMC:  112.130036072745"
[1] 0.7529146 0.8714797 0.8869190 0.9017354 0.9592002
[1] "SMC:  110.319507173337"
[1] 0.7529146 0.8739897 0.8869190 0.9044877 0.9592002
[1] "SMC:  109.659974236326"
[1] 0.7529146 0.8735390 0.8869190 0.9017354 0.9592002
[1] "SMC:  108.189171387742"
[1] 0.7529146 0.8739897 0.8869190 0.9044877 0.9592002
[1] "SMC:  107.424193232636"
[1] 0.7529146 0.8714797 0.8869190 0.9012814 0.9592002
[1] "SMC:  106.781690061049"
[1] 0.7529146 0.8714797 0.8869190 0.9012814 0.9592002
[1] "SMC:  106.600410420121"
[1] 0.7529146 0.8739897 0.8869190 0.9017354 0.9592002
[1] "SMC:  104.323070838596"
[1] 0.7529146 0.8735390 0.8869190 0.9012814 0.9592002
[1] "SMC:  103.757720301712"
[1] 0.7529146 0.8773082 0.8905025 0.9044877 0.9592002
[1] "SMC:  99.2099462742138"
acceptance rate:  0.75 
[1] 0.8417630 0.8809010 0.8877062 0.8993085 0.9395094
[1] "55. 159.167553694179"
[1] 0.8417630 0.8777184 0.8869190 0.8973997 0.9395094
[1] "56. 155.889081286787"
[1] 0.8417630 0.8777184 0.8869190 0.8973997 0.9395094
[1] "57. 155.016997314235"
[1] 0.8417630 0.8779631 0.8869190 0.8985454 0.9395094
[1] "58. 155.670307494741"
[1] 0.8417630 0.8779631 0.8869190 0.8985454 0.9395094
[1] "59. 154.704187337291"
[1] 0.8417630 0.8780112 0.8869190 0.8985454 0.9395094
[1] "60. 154.633399265619"
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
      user     system    elapsed 
101742.164   5047.603   7834.276 
