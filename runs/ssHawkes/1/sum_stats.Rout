
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(StateSpaceInference)
> sessionInfo()
R version 3.5.2 (2018-12-20)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.1 LTS

Matrix products: default
BLAS: /usr/lib/x86_64-linux-gnu/openblas/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/libopenblasp-r0.2.20.so

locale:
 [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8    
 [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8   
 [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] StateSpaceInference_0.4.1

loaded via a namespace (and not attached):
 [1] tidyselect_0.2.5 compiler_3.5.2   magrittr_1.5     assertthat_0.2.0
 [5] R6_2.3.0         pillar_1.3.0     bindrcpp_0.2.2   glue_1.3.0      
 [9] dplyr_0.7.8      tibble_1.4.2     crayon_1.3.4     Rcpp_1.0.0      
[13] pkgconfig_2.0.2  rlang_0.3.0.1    purrr_0.2.5      bindr_0.1.1     
> set.seed(3)
> 
> # TT <- 60
> # true_theta <- c(0.25, 0.5)
> # lower <- 0
> # upper <- 3.5
> # sd_t <- 1
> # init <- min(rgamma(1, 100, 100), upper - 1)
> # a_logit <- 0.9
> # dist_coef <- 0.5
> # true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> #
> # lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> # kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> # y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> 
> y_fun <- function(theta1, theta2, states = NULL){
+   if(is.null(states)){
+     states <- generate_state(NULL, 2, 0, 3.5, sd = 1, 0.9)
+   }
+ 
+   theta <- c(theta1, theta2)
+   TT <- length(states)
+   lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = states)
+   kern <- function(x){return(decay_func(x, alpha = theta[1], delta = theta[2]))}
+   output <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
+ 
+   output <- output[which(output >= TT * 10 - 10)]
+ 
+   n_events <- length(output)
+ 
+   output <- c(TT*10 - 10, output, TT * 10)
+   diffs2    <- sum((diff(output))^2)
+   diffs3     <- sum((diff(output))^3)
+   min_diff <- min(diff(output))
+ 
+   return(c(state = states[TT], n = n_events, diffs2 = diffs2, diffs3 = diffs3, min_diff = min_diff))
+ }
> 
> ## Theta1
> 
> t1 <- seq(0.1, 0.5, by = 1e-4)
> t1_mat <- t(mapply(y_fun, theta1 = t1, theta2 = 0.5))
> t1_df <- cbind.data.frame(theta1 = t1, t1_mat)
> t1_lm <- lm(theta1 ~ poly(n,6, raw = TRUE) + diffs2 + diffs3 + min_diff, data = t1_df)
> summary(t1_lm)

Call:
lm(formula = theta1 ~ poly(n, 6, raw = TRUE) + diffs2 + diffs3 + 
    min_diff, data = t1_df)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.229440 -0.069610 -0.002476  0.062416  0.274140 

Coefficients:
                          Estimate Std. Error t value Pr(>|t|)    
(Intercept)              1.389e-01  2.253e-02   6.164 7.81e-10 ***
poly(n, 6, raw = TRUE)1  4.998e-03  1.441e-03   3.469 0.000528 ***
poly(n, 6, raw = TRUE)2  1.209e-06  4.382e-05   0.028 0.977986    
poly(n, 6, raw = TRUE)3 -4.838e-07  6.360e-07  -0.761 0.446901    
poly(n, 6, raw = TRUE)4  3.767e-09  4.494e-09   0.838 0.401984    
poly(n, 6, raw = TRUE)5 -1.145e-11  1.482e-11  -0.773 0.439596    
poly(n, 6, raw = TRUE)6  1.250e-14  1.810e-14   0.691 0.489769    
diffs2                   2.636e-03  8.464e-04   3.114 0.001858 ** 
diffs3                  -1.578e-04  7.824e-05  -2.016 0.043832 *  
min_diff                -1.021e-03  2.703e-03  -0.378 0.705640    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.0913 on 3991 degrees of freedom
Multiple R-squared:  0.3767,	Adjusted R-squared:  0.3753 
F-statistic:   268 on 9 and 3991 DF,  p-value: < 2.2e-16

> attr(t1_lm$terms, "predvars")
list(theta1, poly(n, 6, raw = TRUE), diffs2, diffs3, min_diff)
> as.numeric(coef(t1_lm))
 [1]  1.388739e-01  4.997625e-03  1.209265e-06 -4.838022e-07  3.766624e-09
 [6] -1.145458e-11  1.249928e-14  2.635814e-03 -1.577590e-04 -1.021220e-03
> 
> state1_lm <- lm(state ~ poly(n,6, raw = TRUE) + diffs2 + diffs3 + min_diff, data = t1_df)
> summary(state1_lm)

Call:
lm(formula = state ~ poly(n, 6, raw = TRUE) + diffs2 + diffs3 + 
    min_diff, data = t1_df)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.66621 -0.35047 -0.01691  0.33874  1.89675 

Coefficients:
                          Estimate Std. Error t value Pr(>|t|)    
(Intercept)              2.034e-01  1.381e-01   1.473  0.14086    
poly(n, 6, raw = TRUE)1  7.178e-02  8.833e-03   8.127 5.83e-16 ***
poly(n, 6, raw = TRUE)2 -1.475e-03  2.686e-04  -5.491 4.25e-08 ***
poly(n, 6, raw = TRUE)3  1.554e-05  3.899e-06   3.985 6.88e-05 ***
poly(n, 6, raw = TRUE)4 -8.438e-08  2.755e-08  -3.063  0.00221 ** 
poly(n, 6, raw = TRUE)5  2.254e-10  9.085e-11   2.481  0.01316 *  
poly(n, 6, raw = TRUE)6 -2.326e-13  1.109e-13  -2.097  0.03605 *  
diffs2                  -5.976e-03  5.189e-03  -1.152  0.24955    
diffs3                   5.602e-04  4.797e-04   1.168  0.24290    
min_diff                 8.058e-03  1.657e-02   0.486  0.62685    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.5597 on 3991 degrees of freedom
Multiple R-squared:  0.3728,	Adjusted R-squared:  0.3714 
F-statistic: 263.5 on 9 and 3991 DF,  p-value: < 2.2e-16

> 
> t2 <- seq(0.2, 1, by = 1e-4)
> t2_mat <- t(mapply(y_fun, theta1 = 0.25, theta2 = t2))
> t2_df <- cbind.data.frame(theta2 = t2, t2_mat)
> t2_lm <- lm(theta2 ~ poly(n,6, raw = TRUE) + diffs2 + diffs3 + min_diff, data = t2_df)
> summary(t2_lm)

Call:
lm(formula = theta2 ~ poly(n, 6, raw = TRUE) + diffs2 + diffs3 + 
    min_diff, data = t2_df)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.47822 -0.15097 -0.00725  0.15642  0.66597 

Coefficients:
                          Estimate Std. Error t value Pr(>|t|)    
(Intercept)              6.418e-01  3.906e-02  16.431   <2e-16 ***
poly(n, 6, raw = TRUE)1  2.509e-03  3.409e-03   0.736   0.4618    
poly(n, 6, raw = TRUE)2 -2.210e-04  1.540e-04  -1.435   0.1513    
poly(n, 6, raw = TRUE)3  9.340e-07  3.407e-06   0.274   0.7839    
poly(n, 6, raw = TRUE)4  2.108e-08  3.699e-08   0.570   0.5687    
poly(n, 6, raw = TRUE)5 -1.946e-10  1.883e-10  -1.034   0.3012    
poly(n, 6, raw = TRUE)6  4.520e-13  3.566e-13   1.268   0.2050    
diffs2                   2.968e-03  1.287e-03   2.306   0.0211 *  
diffs3                  -2.533e-04  1.144e-04  -2.214   0.0268 *  
min_diff                 2.830e-03  3.940e-03   0.718   0.4726    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1995 on 7991 degrees of freedom
Multiple R-squared:  0.2552,	Adjusted R-squared:  0.2544 
F-statistic: 304.2 on 9 and 7991 DF,  p-value: < 2.2e-16

> attr(t2_lm$terms, "predvars")
list(theta2, poly(n, 6, raw = TRUE), diffs2, diffs3, min_diff)
> as.numeric(coef(t2_lm))
 [1]  6.417910e-01  2.508705e-03 -2.210345e-04  9.340399e-07  2.108424e-08
 [6] -1.946335e-10  4.520269e-13  2.967803e-03 -2.532569e-04  2.830355e-03
> 
> state2_lm <- lm(state ~ poly(n,6, raw = TRUE) + diffs2 + diffs3 + min_diff, data = t2_df)
> summary(state2_lm)

Call:
lm(formula = state ~ poly(n, 6, raw = TRUE) + diffs2 + diffs3 + 
    min_diff, data = t2_df)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.72410 -0.28501 -0.01635  0.29863  2.32160 

Coefficients:
                          Estimate Std. Error t value Pr(>|t|)    
(Intercept)              1.803e-01  1.012e-01   1.782 0.074794 .  
poly(n, 6, raw = TRUE)1  5.490e-02  8.829e-03   6.218 5.29e-10 ***
poly(n, 6, raw = TRUE)2  2.827e-04  3.990e-04   0.709 0.478558    
poly(n, 6, raw = TRUE)3 -2.936e-05  8.823e-06  -3.328 0.000879 ***
poly(n, 6, raw = TRUE)4  3.913e-07  9.580e-08   4.084 4.46e-05 ***
poly(n, 6, raw = TRUE)5 -2.008e-09  4.876e-10  -4.118 3.86e-05 ***
poly(n, 6, raw = TRUE)6  3.616e-12  9.236e-13   3.915 9.10e-05 ***
diffs2                   4.192e-04  3.334e-03   0.126 0.899931    
diffs3                  -5.677e-05  2.962e-04  -0.192 0.848033    
min_diff                 5.512e-03  1.021e-02   0.540 0.589117    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.5166 on 7991 degrees of freedom
Multiple R-squared:  0.4709,	Adjusted R-squared:  0.4703 
F-statistic: 790.3 on 9 and 7991 DF,  p-value: < 2.2e-16

> attr(state2_lm$terms, "predvars")
list(state, poly(n, 6, raw = TRUE), diffs2, diffs3, min_diff)
> as.numeric(coef(state2_lm))
 [1]  1.802715e-01  5.490010e-02  2.827284e-04 -2.936200e-05  3.912895e-07
 [6] -2.008020e-09  3.616250e-12  4.192238e-04 -5.677054e-05  5.512495e-03
> 
> proc.time()
   user  system elapsed 
 17.001   0.401  16.959 
