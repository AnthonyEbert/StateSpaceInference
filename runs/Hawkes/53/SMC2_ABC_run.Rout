
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.1.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 20
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10, tp * 10 + 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 400
> Nx = 10000
> pacc = 0.0005
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3004527 0.3989914 0.4862345 0.5779594 0.6998184
[1] 0.3046809 0.4125302 0.5179904 0.6101398 0.6965567
[1] "1. 334.78406427854"
[1] 0.3004527 0.3987906 0.4848459 0.5793597 0.6998184
[1] 0.3046809 0.4206081 0.5195101 0.6095165 0.6965567
[1] "2. 276.115624102983"
[1] 0.3004527 0.3844022 0.4644773 0.5560252 0.6998184
[1] 0.3046809 0.3964490 0.5051355 0.5902936 0.6965567
[1] "3. 208.367203348637"
[1] 0.3004527 0.3835722 0.4644773 0.5493710 0.6998184
[1] 0.3046809 0.3871608 0.4945977 0.5902936 0.6965567
[1] "4. 171.142944992878"
[1] "resample"
[1] 0.2712945 0.3842648 0.4606644 0.5487717 0.7761047
[1] 0.2951963 0.3787775 0.4925880 0.5972561 0.7844063
[1] "SMC:  329.523299091857"
[1] 0.2712945 0.3857893 0.4602139 0.5458745 0.7761047
[1] 0.2951963 0.3796964 0.5075574 0.5892238 0.7844063
[1] "SMC:  260.052941218199"
[1] 0.2712945 0.3635317 0.4443877 0.5298187 0.7761047
[1] 0.2951963 0.3706693 0.4832062 0.5780992 0.7844063
[1] "SMC:  208.391805976249"
[1] 0.2712945 0.3638515 0.4443877 0.5318871 0.7761047
[1] 0.2951963 0.3665514 0.4820407 0.5780992 0.7844063
[1] "SMC:  163.585469224063"
acceptance rate:  0.6375 
[1] 0.3053522 0.3635317 0.4461075 0.5389025 0.6977722
[1] 0.3028806 0.3683614 0.4870262 0.5725548 0.6999727
[1] "5. 329.978551394159"
[1] 0.3053522 0.3625224 0.4435956 0.5289282 0.6977722
[1] 0.3028806 0.3683614 0.4812522 0.5725200 0.6999727
[1] "6. 278.107383874221"
[1] 0.3053522 0.3526369 0.4281578 0.5143225 0.6977722
[1] 0.3028806 0.3683614 0.4885791 0.5725548 0.6999727
[1] "7. 223.041201589868"
[1] 0.3053522 0.3526369 0.4281578 0.5143225 0.6977722
[1] 0.3028806 0.3683614 0.4789502 0.5691336 0.6999727
[1] "8. 198.895950827538"
[1] "resample"
[1] 0.2751821 0.3528406 0.4117525 0.4869620 0.7752976
[1] 0.2781058 0.3771910 0.4830026 0.5730518 0.7654185
[1] "SMC:  334.600177501664"
[1] 0.2727138 0.3528406 0.4109733 0.4834981 0.7752976
[1] 0.2841388 0.3793920 0.4921733 0.5750611 0.7654185
[1] "SMC:  275.004166188095"
[1] 0.2727138 0.3404194 0.3958661 0.4676814 0.7752976
[1] 0.2663051 0.3786556 0.4834384 0.5659174 0.7654185
[1] "SMC:  213.946166361359"
[1] 0.2727138 0.3430560 0.4030126 0.4716926 0.7752976
[1] 0.2663051 0.3766856 0.4780244 0.5642264 0.7654185
[1] "SMC:  188.773300936986"
[1] 0.2818786 0.3398804 0.3996114 0.4666635 0.7752976
[1] 0.2781058 0.3770518 0.4753276 0.5643448 0.7654185
[1] "SMC:  145.307883114714"
[1] 0.2751821 0.3366602 0.4013860 0.4670028 0.7752976
[1] 0.2781058 0.3758641 0.4687689 0.5647154 0.7654185
[1] "SMC:  115.653807661043"
[1] 0.2818786 0.3383243 0.3925807 0.4723046 0.7752976
[1] 0.2781058 0.3766856 0.4570037 0.5632709 0.7654185
[1] "SMC:  74.5596572891127"
[1] 0.2751821 0.3303685 0.3925807 0.4613857 0.7752976
[1] 0.2894015 0.3724088 0.4377678 0.5458574 0.7654185
[1] "SMC:  50.0820763120291"
acceptance rate:  0.575 
[1] 0.3027417 0.3635317 0.3925807 0.5023893 0.6836588
[1] 0.3028806 0.3472992 0.3986772 0.5122650 0.6727269
[1] "9. 314.366551398931"
[1] 0.3066493 0.3842648 0.4565143 0.5762015 0.6836588
[1] 0.3028806 0.3429402 0.3897535 0.5085643 0.6727269
[1] "10. 205.959861705631"
[1] 0.3027417 0.3754557 0.3996895 0.5192918 0.6836588
[1] 0.3028806 0.3472992 0.3965006 0.5122650 0.6727269
[1] "11. 195.451264991938"
[1] "resample"
[1] 0.2754255 0.3650533 0.4277036 0.5452287 0.6982636
[1] 0.2843900 0.3476985 0.3974188 0.5163750 0.6977081
[1] "SMC:  339.686481593241"
[1] 0.2800506 0.3683228 0.4279861 0.5500596 0.6982636
[1] 0.2802935 0.3477731 0.3955448 0.5191680 0.6977081
[1] "SMC:  282.653719728647"
[1] 0.2754255 0.3636397 0.4221552 0.5334872 0.6982636
[1] 0.2843900 0.3485541 0.3950264 0.5178197 0.6977081
[1] "SMC:  235.236950084805"
[1] 0.2800506 0.3636397 0.4273837 0.5371877 0.6982636
[1] 0.2802935 0.3465064 0.3920064 0.5147182 0.6977081
[1] "SMC:  208.759692455958"
[1] 0.2800506 0.3576672 0.4211338 0.5380846 0.6982636
[1] 0.2802935 0.3418264 0.3890175 0.5167056 0.6977081
[1] "SMC:  178.658185049624"
[1] 0.2800506 0.3500496 0.4102346 0.5452287 0.6982636
[1] 0.2802935 0.3435323 0.3891266 0.5209252 0.6977081
[1] "SMC:  160.926515056976"
[1] 0.2800506 0.3427220 0.4031387 0.5258446 0.6982636
[1] 0.2802935 0.3418771 0.3897846 0.5248376 0.6977081
[1] "SMC:  127.524005305202"
[1] 0.2800506 0.3422815 0.4012084 0.5221353 0.6982636
[1] 0.2802935 0.3355943 0.3952856 0.5248376 0.6977081
[1] "SMC:  112.850990665628"
[1] 0.2905361 0.3466455 0.4012084 0.5221642 0.6982636
[1] 0.2802935 0.3510462 0.4159189 0.5352403 0.6977081
[1] "SMC:  94.3195418973803"
[1] 0.2978732 0.3868116 0.4631890 0.5742143 0.6982636
[1] 0.2802935 0.3446122 0.3921223 0.5211475 0.6977081
[1] "SMC:  92.9571020050526"
[1] 0.2905361 0.3623658 0.4215319 0.5329677 0.6982636
[1] 0.2843900 0.3524794 0.4252815 0.5314958 0.6977081
[1] "SMC:  66.921467984285"
acceptance rate:  0.3825 
[1] 0.3168793 0.3925807 0.4531019 0.5695577 0.6079292
[1] 0.3028806 0.3472992 0.4584992 0.5211475 0.6727269
[1] "12. 276.052449965494"
[1] 0.3168793 0.3925807 0.4531019 0.5695577 0.6079292
[1] 0.3028806 0.3437696 0.4577112 0.5122650 0.6727269
[1] "13. 220.82443993562"
[1] 0.3168793 0.3925807 0.4539311 0.5742143 0.6079292
[1] 0.3113762 0.3450667 0.4312214 0.5122650 0.6727269
[1] "14. 186.325724113675"
[1] "resample"
[1] 0.3072460 0.3905052 0.4489805 0.5539552 0.6645500
[1] 0.2919848 0.3515797 0.4441202 0.5104734 0.6830140
[1] "SMC:  342.183816407123"
[1] 0.3072460 0.3919980 0.4485606 0.5537865 0.6645500
[1] 0.2983193 0.3525305 0.4469390 0.5143613 0.6830140
[1] "SMC:  292.726118655517"
[1] 0.3072460 0.3886237 0.4438412 0.5501801 0.6645500
[1] 0.2983193 0.3517208 0.4455731 0.5146426 0.6830140
[1] "SMC:  237.462533157847"
[1] 0.3018395 0.3914693 0.4479571 0.5574777 0.6645500
[1] 0.2983193 0.3471173 0.4261153 0.5083917 0.6830140
[1] "SMC:  195.67490501469"
[1] 0.3072460 0.3932564 0.4510718 0.5574777 0.6645500
[1] 0.2983193 0.3463551 0.4260937 0.5057021 0.6830140
[1] "SMC:  163.463804375312"
[1] 0.3131490 0.3949937 0.4581979 0.5649854 0.6645500
[1] 0.2989426 0.3434435 0.4110566 0.4985370 0.6830140
[1] "SMC:  138.75324817456"
[1] 0.3131490 0.3915592 0.4494644 0.5667368 0.6645500
[1] 0.2989426 0.3426611 0.4126729 0.5055622 0.6830140
[1] "SMC:  112.856899140029"
[1] 0.3131490 0.3919980 0.4493341 0.5651381 0.6645500
[1] 0.2989426 0.3377812 0.4083212 0.5025709 0.6830140
[1] "SMC:  94.3855914858002"
[1] 0.3097255 0.3981670 0.4789330 0.5851347 0.6645500
[1] 0.2989426 0.3401168 0.3950784 0.4900212 0.6830140
[1] "SMC:  94.5498045183865"
[1] 0.3153496 0.4352257 0.5425788 0.5906718 0.6645500
[1] 0.2989426 0.3371392 0.3561671 0.4710801 0.6830140
[1] "SMC:  55.3929815601764"
[1] 0.3131490 0.4130138 0.4954712 0.5889410 0.6645500
[1] 0.2989426 0.3420873 0.3958547 0.4956889 0.6830140
[1] "SMC:  64.5403489684832"
[1] 0.3153496 0.4357801 0.5404741 0.5904171 0.6645500
[1] 0.2989426 0.3409524 0.3720261 0.4818919 0.6830140
[1] "SMC:  43.9962906617852"
[1] 0.3154584 0.4494644 0.5651381 0.5906718 0.6645500
[1] 0.2989426 0.3413270 0.3622022 0.4715674 0.6830140
[1] "SMC:  22.5189058126698"
[1] 0.3154584 0.4463962 0.5651381 0.5906718 0.6645500
[1] 0.2989426 0.3411499 0.3574916 0.4724642 0.6830140
[1] "SMC:  22.5313787847482"
acceptance rate:  0.4125 
[1] 0.3213350 0.4130138 0.5695577 0.5906718 0.6529563
[1] 0.3090205 0.3429402 0.3472992 0.4730782 0.6727269
[1] "15. 322.945260778298"
[1] 0.3213350 0.4427986 0.5751700 0.5906718 0.6529563
[1] 0.3090205 0.3429402 0.3472992 0.4620443 0.6727269
[1] "16. 264.576730153442"
[1] 0.3213350 0.4130138 0.5651381 0.5906718 0.6529563
[1] 0.3090205 0.3429402 0.3472992 0.4956889 0.6727269
[1] "17. 218.625869095532"
[1] 0.3213350 0.4130138 0.5651381 0.5906718 0.6529563
[1] 0.3090205 0.3429402 0.3472992 0.4938603 0.6727269
[1] "18. 174.905522297512"
[1] "resample"
[1] 0.3143851 0.4126473 0.5492366 0.5905603 0.7039116
[1] 0.2926278 0.3370046 0.3606072 0.4874294 0.6886425
[1] "SMC:  335.171986365045"
[1] 0.3143851 0.4101553 0.5479307 0.5891519 0.7039116
[1] 0.2875325 0.3383774 0.3620727 0.4909931 0.6886425
[1] "SMC:  275.28344871125"
[1] 0.3143851 0.4032941 0.5428864 0.5849292 0.7039116
[1] 0.2926278 0.3398282 0.3620727 0.4919235 0.6886425
[1] "SMC:  229.114890196118"
[1] 0.3143851 0.4051902 0.5473761 0.5864904 0.7039116
[1] 0.2926278 0.3398603 0.3626205 0.4887049 0.6886425
[1] "SMC:  193.508243456627"
[1] 0.3143851 0.4063359 0.5419268 0.5855721 0.7039116
[1] 0.2926278 0.3412395 0.3645408 0.4886874 0.6886425
[1] "SMC:  164.672787209846"
[1] 0.3153936 0.4095430 0.5479307 0.5871520 0.7039116
[1] 0.2926278 0.3373148 0.3626205 0.4838886 0.6886425
[1] "SMC:  151.299664392697"
[1] 0.3143851 0.4081723 0.5468215 0.5827689 0.7039116
[1] 0.2926278 0.3388504 0.3626205 0.4838232 0.6886425
[1] "SMC:  123.65940056346"
[1] 0.3153936 0.4070679 0.5429157 0.5809207 0.7039116
[1] 0.2926278 0.3389622 0.3645624 0.4873984 0.6886425
[1] "SMC:  117.876629436736"
[1] 0.3159138 0.4272337 0.5481389 0.5832199 0.7039116
[1] 0.2926278 0.3397820 0.3626205 0.4789780 0.6343561
[1] "SMC:  94.9424439110907"
[1] 0.3294612 0.4849935 0.5595619 0.5900730 0.7039116
[1] 0.2926278 0.3345171 0.3558382 0.4080677 0.6249343
[1] "SMC:  83.1779659140078"
[1] 0.3252382 0.4235204 0.5428864 0.5803908 0.7039116
[1] 0.2943785 0.3416004 0.3664862 0.4789780 0.6249343
[1] "SMC:  79.6399660418148"
[1] 0.3274608 0.4344296 0.5468215 0.5842863 0.7039116
[1] 0.2943785 0.3401531 0.3665880 0.4764682 0.6249343
[1] "SMC:  54.0665144726524"
[1] 0.3294612 0.4353761 0.5486877 0.5920616 0.7039116
[1] 0.2943785 0.3339487 0.3616435 0.4764682 0.6249343
[1] "SMC:  58.0098676181512"
[1] 0.3294612 0.4363226 0.5595619 0.5963845 0.7039116
[1] 0.2943785 0.3339474 0.3614582 0.4635878 0.6249343
[1] "SMC:  46.6347530368102"
[1] 0.3319478 0.4359967 0.5552924 0.5871641 0.7039116
[1] 0.2943785 0.3289385 0.3626205 0.4648724 0.6249343
[1] "SMC:  35.9731600108311"
[1] 0.3637112 0.5072631 0.5646415 0.5911432 0.7039116
[1] 0.2943785 0.3339474 0.3610796 0.3992286 0.6249343
[1] "SMC:  34.605246702473"
[1] 0.3637112 0.4272337 0.5595619 0.5963845 0.7039116
[1] 0.2943785 0.3339474 0.3568101 0.4768675 0.6249343
[1] "SMC:  40.3104156269537"
[1] 0.3677562 0.4272337 0.5595619 0.6049852 0.7039116
[1] 0.2943785 0.3276234 0.3576503 0.4838232 0.6249343
[1] "SMC:  30.9008794828532"
acceptance rate:  0.375 
[1] 0.3213350 0.4352257 0.5762015 0.5935281 0.6629576
[1] 0.3045157 0.3289313 0.3442485 0.4749203 0.5991874
[1] "19. 328.191663931736"
[1] 0.3213350 0.4272337 0.5738481 0.5906718 0.6629576
[1] 0.3045157 0.3325722 0.3472992 0.4838232 0.5991874
[1] "20. 268.773242435552"
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
      user     system    elapsed 
253183.239   1707.253  23693.464 
