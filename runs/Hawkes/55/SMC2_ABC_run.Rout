
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.1.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 40
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10, tp * 10 + 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 20
> Nx = 100000
> pacc = 0.0005
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3050046 0.3534325 0.4128013 0.5576886 0.6948376
[1] 0.3085687 0.3963668 0.4739368 0.5319753 0.6630416
[1] "1. 19.4953207385645"
[1] 0.3050046 0.3523801 0.3943514 0.5152899 0.6948376
[1] 0.3085687 0.3963668 0.4665708 0.5319753 0.6630416
[1] "2. 17.9621570262711"
[1] 0.3050046 0.3534325 0.3943514 0.4533714 0.6948376
[1] 0.3085687 0.3963668 0.4709722 0.5319753 0.6630416
[1] "3. 17.4093486065923"
[1] 0.3050046 0.3523801 0.3842073 0.4441680 0.6948376
[1] 0.3085687 0.3963668 0.4665708 0.5177036 0.6630416
[1] "4. 16.4748030596838"
[1] 0.3050046 0.3523801 0.3822319 0.4441680 0.6948376
[1] 0.3085687 0.3963668 0.4709722 0.5319753 0.6630416
[1] "5. 15.4669090567844"
[1] 0.3050046 0.3523801 0.3822319 0.4249628 0.6948376
[1] 0.3085687 0.3963668 0.4665708 0.5319753 0.6630416
[1] "6. 15.6922986952488"
[1] 0.3050046 0.3523801 0.3822319 0.4249628 0.6948376
[1] 0.3085687 0.3699393 0.4592023 0.5177036 0.6630416
[1] "7. 15.4037477657155"
[1] 0.3293021 0.3523801 0.3822319 0.4249628 0.6948376
[1] 0.3085687 0.3699393 0.4592023 0.4981475 0.6630416
[1] "8. 14.2361589159969"
[1] 0.3293021 0.3534325 0.3842073 0.4441680 0.6948376
[1] 0.3085687 0.3699393 0.4592023 0.4981475 0.6630416
[1] "9. 14.6788074178379"
[1] 0.3293021 0.3534325 0.3842073 0.4249628 0.6948376
[1] 0.3085687 0.3963668 0.4636062 0.4981475 0.6630416
[1] "10. 13.2848745214725"
[1] 0.3293021 0.3523801 0.3822319 0.4249628 0.6948376
[1] 0.3085687 0.3963668 0.4636062 0.4981475 0.6630416
[1] "11. 13.4025001095034"
[1] 0.3293021 0.3591399 0.3842073 0.4249628 0.6948376
[1] 0.3085687 0.4042954 0.4636062 0.5319753 0.6630416
[1] "12. 14.1962401915508"
[1] 0.3293021 0.3594906 0.3943514 0.4441680 0.6948376
[1] 0.3085687 0.4097002 0.4665708 0.5319753 0.6630416
[1] "13. 14.0709277081038"
[1] 0.3293021 0.3591399 0.3822319 0.4441680 0.6948376
[1] 0.3085687 0.4097002 0.4709722 0.5319753 0.6630416
[1] "14. 12.9184974089073"
[1] 0.3293021 0.3594906 0.3943514 0.5017836 0.6948376
[1] 0.3085687 0.4115018 0.4709722 0.5319753 0.6630416
[1] "15. 13.3548348766308"
[1] 0.3293021 0.3591399 0.4026572 0.5017836 0.6948376
[1] 0.3085687 0.4097002 0.4665708 0.5319753 0.6630416
[1] "16. 12.9251506221293"
[1] 0.3293021 0.3534325 0.3822319 0.4441680 0.6948376
[1] 0.3085687 0.4097002 0.4709722 0.5319753 0.6630416
[1] "17. 14.0841720871835"
[1] 0.3293021 0.3530854 0.3822319 0.4441680 0.6948376
[1] 0.3085687 0.4097002 0.4709722 0.5319753 0.6630416
[1] "18. 13.6267142693987"
[1] 0.3293021 0.3591399 0.3943514 0.4441680 0.6948376
[1] 0.3085687 0.4115018 0.4709722 0.5319753 0.6630416
[1] "19. 13.3643376647631"
[1] 0.3293021 0.3591399 0.3943514 0.4441680 0.6948376
[1] 0.3085687 0.4097002 0.4636062 0.5298289 0.6630416
[1] "20. 12.1998477872255"
[1] 0.3385294 0.3594906 0.3943514 0.4441680 0.6948376
[1] 0.3085687 0.3963668 0.4636062 0.4981475 0.6630416
[1] "21. 12.0743659202099"
[1] 0.3385294 0.3594906 0.3842073 0.4441680 0.6948376
[1] 0.3085687 0.3937252 0.4636062 0.4981475 0.6630416
[1] "22. 11.9083358356068"
[1] 0.3385294 0.3594906 0.3943514 0.4249628 0.6948376
[1] 0.3085687 0.4097002 0.4636062 0.5298289 0.6630416
[1] "23. 11.3564450730965"
[1] 0.3385294 0.3594906 0.3842073 0.4249628 0.6948376
[1] 0.3085687 0.3963668 0.4636062 0.5298289 0.6630416
[1] "24. 10.3144916949817"
[1] 0.3385294 0.3594906 0.3822319 0.4249628 0.6948376
[1] 0.3085687 0.3963668 0.4636062 0.5298289 0.6630416
[1] "25. 10.4929126076634"
[1] 0.3293021 0.3594906 0.3822319 0.4220710 0.6948376
[1] 0.3085687 0.3963668 0.4636062 0.5298289 0.6630416
[1] "26. 10.077313227546"
[1] 0.3385294 0.3613931 0.3822319 0.4249628 0.6948376
[1] 0.3085687 0.3699393 0.4592023 0.5298289 0.6630416
[1] "27. 9.20205632113005"
[1] "resample"
[1] 0.3588430 0.3704832 0.3941139 0.4342415 0.5805243
[1] 0.3085349 0.3742777 0.4702876 0.5111691 0.5625313
[1] "SMC:  19.4278721566369"
[1] 0.3524505 0.3704832 0.3854488 0.4245744 0.5805243
[1] 0.3005774 0.3691955 0.4616146 0.4890608 0.5625313
[1] "SMC:  18.3507039966713"
[1] 0.3524505 0.3704832 0.3792985 0.4245744 0.5805243
[1] 0.3005774 0.3691955 0.4664843 0.4890608 0.5625313
[1] "SMC:  18.2481101122218"
[1] 0.3524505 0.3654713 0.3772027 0.4130940 0.5805243
[1] 0.3005774 0.3691955 0.4616146 0.4942445 0.5625313
[1] "SMC:  17.6954583329223"
[1] 0.3524505 0.3704832 0.3772027 0.4171217 0.5805243
[1] 0.3005774 0.3622051 0.4616146 0.4890608 0.5625313
[1] "SMC:  17.5191908541197"
[1] 0.3524505 0.3704832 0.3772027 0.4171217 0.5805243
[1] 0.3085349 0.3622051 0.4616146 0.4890608 0.5625313
[1] "SMC:  17.2113335946073"
[1] 0.3524505 0.3704832 0.3772027 0.4245744 0.5805243
[1] 0.3005774 0.3691955 0.4616146 0.4890608 0.5625313
[1] "SMC:  17.7601723065386"
[1] 0.3524505 0.3704832 0.3772027 0.4171217 0.5805243
[1] 0.3005774 0.3551589 0.4344741 0.4890608 0.5625313
[1] "SMC:  16.6301346184024"
[1] 0.3588430 0.3704832 0.3772027 0.4245744 0.5805243
[1] 0.3005774 0.3551589 0.4296044 0.4890608 0.5625313
[1] "SMC:  16.2931024312166"
[1] 0.3588430 0.3704832 0.3772027 0.4245744 0.5805243
[1] 0.3085349 0.3551589 0.4344741 0.4890608 0.5625313
[1] "SMC:  16.3279328749966"
[1] 0.3524505 0.3704832 0.3772027 0.4245744 0.5805243
[1] 0.3005774 0.3691955 0.4630816 0.4890608 0.5625313
[1] "SMC:  16.6207206456364"
[1] 0.3588430 0.3725316 0.4016607 0.4371783 0.5805243
[1] 0.3085349 0.3820650 0.4694183 0.5111691 0.5625313
[1] "SMC:  16.649746170084"
[1] 0.3588430 0.3742070 0.4034851 0.4459887 0.5805243
[1] 0.3085349 0.3827530 0.4694183 0.4942445 0.5625313
[1] "SMC:  16.1383503248293"
[1] 0.3588430 0.3725316 0.3941139 0.4371783 0.5805243
[1] 0.3085349 0.3827530 0.4694183 0.4942445 0.5625313
[1] "SMC:  15.9735257567507"
[1] 0.3588430 0.3745483 0.4034851 0.4459887 0.5805243
[1] 0.3085349 0.3855782 0.4702876 0.5143281 0.5625313
[1] "SMC:  14.5397148667861"
[1] 0.3588430 0.3745483 0.4016607 0.4459887 0.5805243
[1] 0.3085349 0.3855782 0.4702876 0.4942445 0.5625313
[1] "SMC:  14.3088176203512"
[1] 0.3588430 0.3725316 0.3966289 0.4459887 0.5805243
[1] 0.3085349 0.3982424 0.4711568 0.5111691 0.5625313
[1] "SMC:  14.2132526913492"
[1] 0.3588430 0.3725316 0.3966289 0.4459887 0.5805243
[1] 0.3085349 0.3982424 0.4702876 0.5111691 0.5625313
[1] "SMC:  13.8646818506956"
[1] 0.3588430 0.3742070 0.3966289 0.4459887 0.5805243
[1] 0.3085349 0.4504792 0.4713875 0.5125602 0.5625313
[1] "SMC:  13.7823728277123"
[1] 0.3588430 0.3715071 0.3941139 0.4459887 0.5805243
[1] 0.3085349 0.4389533 0.4713875 0.5111691 0.5625313
[1] "SMC:  13.7335053416061"
[1] 0.3588430 0.3715071 0.3941139 0.4459887 0.5805243
[1] 0.3085349 0.4389533 0.4713875 0.5111691 0.5625313
[1] "SMC:  13.2890075033292"
[1] 0.3588430 0.3704832 0.3879637 0.4371783 0.5805243
[1] 0.3085349 0.3982424 0.4713875 0.5111691 0.5625313
[1] "SMC:  14.2659473386822"
[1] 0.3588430 0.3704832 0.3966289 0.4371783 0.5805243
[1] 0.3085349 0.4504792 0.4713875 0.5111691 0.5625313
[1] "SMC:  13.8597906474546"
[1] 0.3588430 0.3704832 0.3879637 0.4342415 0.5805243
[1] 0.3085349 0.4389533 0.4713875 0.5111691 0.5625313
[1] "SMC:  14.3561485665378"
[1] 0.3588430 0.3674097 0.3833529 0.4245744 0.5805243
[1] 0.3085349 0.4389533 0.4713875 0.5125602 0.5625313
[1] "SMC:  13.3395092686539"
[1] 0.3588430 0.3674097 0.3772027 0.4245744 0.5805243
[1] 0.3085349 0.3954173 0.4711568 0.5111691 0.5625313
[1] "SMC:  13.4482942336566"
[1] 0.3588430 0.3674097 0.3751068 0.4163164 0.5805243
[1] 0.3085349 0.3735896 0.4702876 0.4896501 0.5625313
[1] "SMC:  13.7450971269528"
acceptance rate:  0.7 
[1] 0.3524505 0.3654480 0.3963074 0.4272825 0.5017836
[1] 0.3622051 0.4636062 0.4711568 0.5105798 0.5464528
[1] "28. 19.42653017701"
[1] 0.3588430 0.3674097 0.4249628 0.4459887 0.5017836
[1] 0.3742777 0.4636062 0.4711568 0.4716182 0.5464528
[1] "29. 17.0959114152603"
[1] 0.3588430 0.4149875 0.4249628 0.4459887 0.5017836
[1] 0.4115018 0.4636062 0.4702876 0.4716182 0.5464528
[1] "30. 14.3736443439444"
[1] 0.3674097 0.4249628 0.4296021 0.4459887 0.5017836
[1] 0.4115018 0.4636062 0.4694183 0.4716182 0.5464528
[1] "31. 11.7677595958693"
[1] 0.3674097 0.4249628 0.4342415 0.4459887 0.5017836
[1] 0.4115018 0.4636062 0.4702876 0.4716182 0.5464528
[1] "32. 10.2282546013147"
[1] 0.3674097 0.4249628 0.4342415 0.4459887 0.5017836
[1] 0.4115018 0.4636062 0.4702876 0.4716182 0.5464528
[1] "33. 10.5183049592564"
[1] 0.3674097 0.4249628 0.4342415 0.4459887 0.5017836
[1] 0.4115018 0.4636062 0.4713875 0.4716182 0.5464528
[1] "34. 10.4915025103569"
[1] 0.3674097 0.4249628 0.4401151 0.4459887 0.5017836
[1] 0.4115018 0.4636062 0.4713875 0.4716182 0.5464528
[1] "35. 9.88504364866063"
[1] "resample"
[1] 0.4171999 0.4313851 0.4394354 0.4499610 0.5157028
[1] 0.4029226 0.4631776 0.4685110 0.4768164 0.4822836
[1] "SMC:  19.4953444280598"
[1] 0.4185603 0.4313851 0.4394354 0.4524354 0.5157028
[1] 0.4029226 0.4630403 0.4685110 0.4768164 0.4822836
[1] "SMC:  18.7858807413613"
[1] 0.4185603 0.4333233 0.4409356 0.4524354 0.5157028
[1] 0.4029226 0.4630403 0.4685110 0.4768164 0.4822836
[1] "SMC:  18.9442209992728"
[1] 0.4185603 0.4350844 0.4441730 0.4539489 0.5157028
[1] 0.4029226 0.4629818 0.4679833 0.4753761 0.4822836
[1] "SMC:  18.4209367469429"
[1] 0.4185603 0.4333233 0.4409356 0.4524354 0.5157028
[1] 0.4029226 0.4629818 0.4685110 0.4768164 0.4822836
[1] "SMC:  18.2359755602081"
[1] 0.4185603 0.4333233 0.4427342 0.4539489 0.5157028
[1] 0.4029226 0.4627273 0.4685110 0.4756014 0.4822836
[1] "SMC:  17.6544680440958"
[1] 0.4185603 0.4350844 0.4441730 0.4564251 0.5157028
[1] 0.4029226 0.4629818 0.4685110 0.4753761 0.4822836
[1] "SMC:  17.8500316356721"
[1] 0.4185603 0.4333233 0.4427342 0.4539489 0.5157028
[1] 0.4029226 0.4629818 0.4685110 0.4765911 0.4822836
[1] "SMC:  18.0207228133277"
[1] 0.4185603 0.4313851 0.4409356 0.4524354 0.5157028
[1] 0.4029226 0.4630403 0.4712497 0.4768164 0.4822836
[1] "SMC:  17.2612129802731"
[1] 0.4185603 0.4333233 0.4379967 0.4524354 0.5157028
[1] 0.4029226 0.4631776 0.4728438 0.4774963 0.4822836
[1] "SMC:  16.9847815818423"
[1] 0.4185603 0.4333233 0.4379967 0.4494565 0.5157028
[1] 0.4029226 0.4644040 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.5345147640814"
[1] 0.4185603 0.4350844 0.4364965 0.4494565 0.5157028
[1] 0.4029226 0.4645400 0.4728438 0.4774963 0.4822836
[1] "SMC:  15.945607874988"
[1] 0.4185603 0.4350844 0.4364965 0.4519308 0.5157028
[1] 0.4029226 0.4645400 0.4728438 0.4768164 0.4822836
[1] "SMC:  15.3208943304771"
[1] 0.4185603 0.4350844 0.4379967 0.4519308 0.5157028
[1] 0.4029226 0.4645400 0.4728438 0.4768164 0.4822836
[1] "SMC:  15.9063442843744"
[1] 0.4185603 0.4350844 0.4379967 0.4524354 0.5157028
[1] 0.4029226 0.4644215 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.1791110099098"
[1] 0.4185603 0.4350844 0.4379967 0.4519308 0.5157028
[1] 0.4029226 0.4644215 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.6019798682116"
[1] 0.4185603 0.4350844 0.4394968 0.4519308 0.5157028
[1] 0.4029226 0.4644215 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.838942392829"
[1] 0.4185603 0.4350844 0.4379967 0.4519308 0.5157028
[1] 0.4152330 0.4645400 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.4496631182519"
[1] 0.4185603 0.4350844 0.4379967 0.4494565 0.5157028
[1] 0.4587180 0.4649488 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.0459111311497"
[1] 0.4185603 0.4333233 0.4379967 0.4494565 0.5157028
[1] 0.4587180 0.4649488 0.4728438 0.4768164 0.4822836
[1] "SMC:  16.2179767053931"
[1] 0.4185603 0.4313851 0.4364965 0.4486583 0.5157028
[1] 0.4587180 0.4649488 0.4729514 0.4774963 0.4822836
[1] "SMC:  15.3853686098756"
[1] 0.4185603 0.4313351 0.4364965 0.4478335 0.5157028
[1] 0.4587180 0.4649488 0.4729514 0.4774963 0.4822836
[1] "SMC:  14.8278462870737"
[1] 0.4171999 0.4313851 0.4364965 0.4478335 0.5157028
[1] 0.4587180 0.4659802 0.4728438 0.4774963 0.4822836
[1] "SMC:  13.1110533480764"
[1] 0.4185603 0.4350844 0.4364965 0.4486583 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4768164 0.4822836
[1] "SMC:  12.1053745541806"
[1] 0.4185603 0.4357304 0.4364965 0.4494565 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4768164 0.4822836
[1] "SMC:  11.9968572993546"
[1] 0.4185603 0.4350844 0.4364965 0.4519308 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4774963 0.4822836
[1] "SMC:  13.0626895518545"
[1] 0.4171999 0.4350844 0.4364965 0.4519308 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4768164 0.4822836
[1] "SMC:  13.4855526308078"
[1] 0.4171999 0.4333233 0.4364965 0.4494565 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4774963 0.4822836
[1] "SMC:  13.8789806681816"
[1] 0.4171999 0.4357304 0.4427342 0.4524354 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4756014 0.4822836
[1] "SMC:  13.8872693035467"
[1] 0.4171999 0.4359294 0.4449708 0.4524354 0.5157028
[1] 0.4587180 0.4667718 0.4728438 0.4756014 0.4822836
[1] "SMC:  13.2190933110225"
[1] 0.4185603 0.4363713 0.4480996 0.4564251 0.5157028
[1] 0.4029226 0.4667718 0.4712497 0.4753761 0.4822836
[1] "SMC:  12.2003161669392"
[1] 0.4171999 0.4363713 0.4502813 0.4638536 0.5157028
[1] 0.4029226 0.4645400 0.4696556 0.4749712 0.4822836
[1] "SMC:  10.867790492983"
[1] 0.4185603 0.4409048 0.4519308 0.4638536 0.5157028
[1] 0.4029226 0.4631776 0.4696556 0.4749712 0.4822836
[1] "SMC:  10.1287786069792"
[1] 0.4185603 0.4407796 0.4519308 0.4638536 0.5157028
[1] 0.4029226 0.4620234 0.4696556 0.4749712 0.4822836
[1] "SMC:  9.55230076169512"
[1] 0.4185603 0.4409048 0.4519308 0.4638536 0.5157028
[1] 0.4029226 0.4620234 0.4696556 0.4749712 0.4822836
[1] "SMC:  9.3502480844546"
acceptance rate:  0.75 
[1] 0.4357304 0.4459887 0.4578922 0.4638536 0.5157028
[1] 0.4029226 0.4696556 0.4706369 0.4735370 0.4749712
[1] "36. 19.4786454384635"
[1] 0.4255759 0.4459887 0.4578922 0.4638536 0.5157028
[1] 0.4029226 0.4696556 0.4706369 0.4733756 0.4749712
[1] "37. 19.2370229041058"
[1] 0.4357304 0.4504453 0.4638536 0.4638536 0.5157028
[1] 0.4029226 0.4696556 0.4706369 0.4735370 0.4749712
[1] "38. 18.7047262823693"
[1] 0.4357304 0.4504453 0.4638536 0.4638536 0.5157028
[1] 0.4029226 0.4696556 0.4696556 0.4735370 0.4749712
[1] "39. 18.1580095022274"
[1] 0.4357304 0.4504453 0.4578922 0.4768159 0.5157028
[1] 0.4029226 0.4669212 0.4706369 0.4735370 0.4749712
[1] "40. 17.1987106376875"
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
      user     system    elapsed 
206266.160   1706.921  22761.915 
