
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.1.0

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 20
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10, tp * 10 + 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 400
> Nx = 10000
> pacc = 0.0005
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3032790 0.3992166 0.4862104 0.5799806 0.6998184
[1] 0.3046809 0.4102784 0.5174625 0.6149739 0.6965567
[1] "1. 328.245527654686"
[1] 0.3032790 0.3953442 0.4730524 0.5690283 0.6998184
[1] 0.3033549 0.4148862 0.5385841 0.6181911 0.6965567
[1] "2. 266.338758061897"
[1] 0.3032790 0.3830336 0.4505309 0.5429618 0.6998184
[1] 0.3033549 0.4014736 0.5219030 0.6102512 0.6965567
[1] "3. 218.33570341249"
[1] 0.3032790 0.3778601 0.4466456 0.5399217 0.6998184
[1] 0.3033549 0.3885935 0.5081923 0.6031817 0.6965567
[1] "4. 194.678188681609"
[1] "resample"
[1] 0.2896015 0.3835330 0.4438154 0.5346611 0.7804721
[1] 0.2938924 0.4117088 0.5231449 0.6015775 0.7505368
[1] "SMC:  325.415059533792"
[1] 0.2799291 0.3811547 0.4385905 0.5253213 0.7804721
[1] 0.2949008 0.4169906 0.5230443 0.6026796 0.7505368
[1] "SMC:  277.358237130166"
[1] 0.2896015 0.3632867 0.4188351 0.4986341 0.7804721
[1] 0.2949008 0.3900804 0.4940461 0.5853246 0.7505368
[1] "SMC:  198.061230396406"
[1] 0.2799291 0.3604546 0.4191478 0.4972591 0.7804721
[1] 0.2949008 0.3900594 0.4893967 0.5831916 0.7505368
[1] "SMC:  175.54703050878"
acceptance rate:  0.645 
[1] 0.3018473 0.3540043 0.4223777 0.4711929 0.6851231
[1] 0.3126158 0.4104072 0.4582073 0.5752966 0.6948359
[1] "5. 327.385824193812"
[1] 0.3018473 0.3505980 0.4128728 0.4711929 0.6851231
[1] 0.3032523 0.4107109 0.4582073 0.5729985 0.6948359
[1] "6. 263.669174537814"
[1] 0.3018473 0.3437646 0.4086627 0.4711929 0.6851231
[1] 0.3032523 0.4021678 0.4537908 0.5716122 0.6948359
[1] "7. 221.498840280365"
[1] 0.3008966 0.3335226 0.4087752 0.4711929 0.6851231
[1] 0.3032523 0.4023225 0.4537908 0.5716122 0.6948359
[1] "8. 177.974710268376"
[1] "resample"
[1] 0.2700416 0.3312959 0.4048633 0.4786693 0.7306883
[1] 0.2873561 0.3842438 0.4495212 0.5742096 0.7434229
[1] "SMC:  339.602691161067"
[1] 0.2664516 0.3340025 0.4056618 0.4780416 0.7306883
[1] 0.2873561 0.3871354 0.4520912 0.5763309 0.7434229
[1] "SMC:  280.960272908355"
[1] 0.2664516 0.3232853 0.3898569 0.4591482 0.7306883
[1] 0.2873561 0.3789441 0.4384879 0.5559036 0.7434229
[1] "SMC:  233.063165250504"
[1] 0.2664516 0.3204288 0.3835498 0.4591482 0.7306883
[1] 0.2873561 0.3744357 0.4415468 0.5569511 0.7434229
[1] "SMC:  188.486739605922"
[1] 0.2664516 0.3191049 0.3717843 0.4586103 0.7306883
[1] 0.2873561 0.3568673 0.4238486 0.5406868 0.7434229
[1] "SMC:  150.851635575779"
[1] 0.2664516 0.3191151 0.3757297 0.4578594 0.7306883
[1] 0.2873561 0.3498568 0.4244358 0.5486849 0.7434229
[1] "SMC:  118.558131247069"
[1] 0.2664516 0.3192978 0.3618911 0.4521204 0.7306883
[1] 0.2873561 0.3518867 0.4322240 0.5489408 0.7434229
[1] "SMC:  96.9585307471708"
[1] 0.2664516 0.3191049 0.3551560 0.4436961 0.7306883
[1] 0.2873561 0.3573187 0.4315205 0.5438399 0.7434229
[1] "SMC:  92.8098350432381"
acceptance rate:  0.5525 
[1] 0.3003694 0.3206337 0.3821665 0.4736381 0.6603953
[1] 0.3050101 0.3572680 0.4466371 0.5599940 0.6960396
[1] "9. 314.861460957179"
[1] 0.3003694 0.3614669 0.4522992 0.5465025 0.6603953
[1] 0.3059438 0.3676874 0.4513303 0.5716122 0.6960396
[1] "10. 204.99220365592"
[1] 0.3003694 0.3338825 0.4154583 0.5037307 0.6603953
[1] 0.3059438 0.3800833 0.4513303 0.5716122 0.6960396
[1] "11. 190.539818395992"
[1] "resample"
[1] 0.2612881 0.3325483 0.3945609 0.4980166 0.7271443
[1] 0.2739999 0.3651244 0.4535392 0.5694166 0.7275551
[1] "SMC:  329.29217603912"
[1] 0.2612881 0.3334427 0.3942289 0.4973954 0.7271443
[1] 0.2739999 0.3692270 0.4544882 0.5724456 0.7275551
[1] "SMC:  267.21330564574"
[1] 0.2641957 0.3290424 0.3804750 0.4781674 0.7271443
[1] 0.2739999 0.3505096 0.4379302 0.5545329 0.7275551
[1] "SMC:  208.319614512384"
[1] 0.2612881 0.3290424 0.3725344 0.4751230 0.7271443
[1] 0.2739999 0.3567520 0.4402406 0.5532553 0.7275551
[1] "SMC:  194.871504446021"
[1] 0.2641957 0.3238681 0.3732337 0.4681018 0.7271443
[1] 0.2739999 0.3509756 0.4309206 0.5403158 0.7275551
[1] "SMC:  157.312438912928"
[1] 0.2641957 0.3220254 0.3671888 0.4640196 0.7271443
[1] 0.2739999 0.3580112 0.4379101 0.5483948 0.7275551
[1] "SMC:  109.043442752129"
[1] 0.2641957 0.3211956 0.3535645 0.4592387 0.7271443
[1] 0.2813689 0.3655741 0.4379302 0.5499582 0.7275551
[1] "SMC:  82.0404203048837"
[1] 0.2710044 0.3192355 0.3428238 0.4488597 0.7271443
[1] 0.2813689 0.3692270 0.4451927 0.5675810 0.7275551
[1] "SMC:  65.764054578011"
[1] 0.2793590 0.3318626 0.3566290 0.4583477 0.7271443
[1] 0.2813689 0.3981813 0.4519890 0.5784036 0.7275551
[1] "SMC:  57.8130584191832"
[1] 0.2801992 0.3368259 0.4341592 0.4923308 0.7271443
[1] 0.2813689 0.4018624 0.4517542 0.5776747 0.7275551
[1] "SMC:  45.5141633801459"
[1] 0.2869291 0.3347900 0.3899535 0.4913231 0.7271443
[1] 0.2905900 0.4061772 0.4610711 0.5882618 0.7275551
[1] "SMC:  33.2547990750685"
acceptance rate:  0.45 
[1] 0.3003694 0.4211196 0.4913231 0.5037307 0.6603953
[1] 0.3091544 0.4061772 0.4514769 0.5716122 0.6960396
[1] "12. 236.155390246782"
[1] 0.3003694 0.4452096 0.4913231 0.5130606 0.6603953
[1] 0.3156154 0.4061772 0.4529410 0.5716122 0.6960396
[1] "13. 171.672634704988"
[1] "resample"
[1] 0.2884726 0.4356044 0.4817416 0.5277934 0.6962059
[1] 0.2950045 0.4050508 0.4529721 0.5633823 0.7731132
[1] "SMC:  336.571872502886"
[1] 0.2884726 0.4361039 0.4812023 0.5229277 0.6962059
[1] 0.2950045 0.4051168 0.4498584 0.5614009 0.7731132
[1] "SMC:  274.098598746755"
[1] 0.2884726 0.4319520 0.4784840 0.5157258 0.6561277
[1] 0.2950045 0.4021219 0.4418414 0.5488623 0.7731132
[1] "SMC:  235.310253580012"
[1] 0.2884726 0.4228233 0.4755473 0.5116085 0.6561277
[1] 0.2950045 0.4004412 0.4409352 0.5460515 0.7731132
[1] "SMC:  196.386015323894"
[1] 0.2884726 0.4178151 0.4756751 0.5114704 0.6561277
[1] 0.2950045 0.4000820 0.4395690 0.5204055 0.7731132
[1] "SMC:  132.999326071237"
[1] 0.2884726 0.4178151 0.4754069 0.5101459 0.6561277
[1] 0.2950045 0.3985468 0.4412480 0.5367330 0.7731132
[1] "SMC:  115.154618543896"
[1] 0.2884726 0.4160077 0.4746269 0.5093112 0.6561277
[1] 0.2950045 0.4011062 0.4439276 0.5491658 0.7731132
[1] "SMC:  93.7156155279269"
[1] 0.2940229 0.4024222 0.4629878 0.5084236 0.6561277
[1] 0.2950045 0.4016527 0.4439276 0.5446931 0.7731132
[1] "SMC:  57.7274162934301"
[1] 0.2959776 0.4024222 0.4705636 0.5079851 0.6561277
[1] 0.2950045 0.4038377 0.4439276 0.5527742 0.7731132
[1] "SMC:  64.9058543598408"
[1] 0.2968653 0.4363837 0.4783008 0.5113409 0.6561277
[1] 0.2950045 0.4051168 0.4439276 0.5460515 0.7731132
[1] "SMC:  54.2474561705699"
[1] 0.2968653 0.4237380 0.4731115 0.5079851 0.6561277
[1] 0.2950045 0.4063562 0.4439276 0.5462652 0.7731132
[1] "SMC:  45.7936113093864"
[1] 0.3058529 0.4449131 0.4731115 0.5084236 0.6561277
[1] 0.2950045 0.4141650 0.4476847 0.5975748 0.7731132
[1] "SMC:  37.9938264884722"
[1] 0.3058529 0.4459648 0.4783008 0.5117788 0.6561277
[1] 0.2950045 0.4095475 0.4468304 0.5945385 0.7731132
[1] "SMC:  42.3976643823786"
acceptance rate:  0.42 
[1] 0.3003694 0.4488597 0.4913231 0.5042613 0.6276965
[1] 0.3139383 0.4061772 0.4439276 0.5619469 0.6959010
[1] "14. 337.040781934614"
[1] 0.3003694 0.4488597 0.4816456 0.5037307 0.6276965
[1] 0.3139383 0.4061772 0.4439276 0.5460427 0.6959010
[1] "15. 273.433971127218"
[1] 0.3003694 0.4488597 0.4816456 0.5037307 0.6276965
[1] 0.3185924 0.4061772 0.4439276 0.5619469 0.6959010
[1] "16. 211.369006796298"
[1] 0.3003694 0.4465539 0.4816456 0.5037307 0.6276965
[1] 0.3185924 0.4061772 0.4439276 0.5716122 0.6959010
[1] "17. 168.798335424614"
[1] "resample"
[1] 0.2873506 0.4485240 0.4817810 0.5103080 0.6278906
[1] 0.2933396 0.4061469 0.4513668 0.5576660 0.7164809
[1] "SMC:  336.716344821214"
[1] 0.2873506 0.4484100 0.4810562 0.5121611 0.6278906
[1] 0.2933396 0.4043484 0.4483825 0.5623663 0.7164809
[1] "SMC:  288.586085763121"
[1] 0.2873506 0.4376849 0.4746613 0.5071522 0.6278906
[1] 0.2933396 0.4016668 0.4387235 0.5412948 0.7164809
[1] "SMC:  235.750195555907"
[1] 0.2873506 0.4373139 0.4740729 0.5084175 0.6278906
[1] 0.2933396 0.4019487 0.4370351 0.5389631 0.7164809
[1] "SMC:  196.086867313184"
[1] 0.2873506 0.4234571 0.4696544 0.5022947 0.6278906
[1] 0.2933396 0.4007336 0.4371188 0.5255733 0.7164809
[1] "SMC:  178.6914288665"
[1] 0.2931404 0.4261040 0.4740450 0.5043955 0.6278906
[1] 0.2933396 0.4004753 0.4371188 0.5087583 0.7164809
[1] "SMC:  164.723869129267"
[1] 0.2954800 0.4248064 0.4681278 0.5022947 0.6278906
[1] 0.2933396 0.3981349 0.4375992 0.5013121 0.7164809
[1] "SMC:  126.61153619525"
[1] 0.2954800 0.4030827 0.4621529 0.4965322 0.6278906
[1] 0.2933396 0.3948018 0.4346089 0.4837810 0.7164809
[1] "SMC:  87.3560320219368"
[1] 0.2954800 0.4148170 0.4654795 0.4981698 0.6278906
[1] 0.2933396 0.3981437 0.4369513 0.5013121 0.7164809
[1] "SMC:  99.9567687175458"
[1] 0.3014801 0.4480174 0.4851542 0.5039548 0.6278906
[1] 0.2933396 0.4046829 0.4360830 0.5087583 0.7164809
[1] "SMC:  94.4304260174002"
[1] 0.3014801 0.4171805 0.4667411 0.4944102 0.6184146
[1] 0.3034003 0.4102192 0.4421618 0.5087583 0.7164809
[1] "SMC:  65.0194259303442"
[1] 0.3065853 0.4480174 0.4833275 0.4979163 0.6184146
[1] 0.3241716 0.4091958 0.4375992 0.5517672 0.7164809
[1] "SMC:  44.7949367704633"
[1] 0.3408201 0.4480174 0.4800093 0.4990995 0.6184146
[1] 0.3171960 0.4102091 0.4408250 0.5517672 0.7164809
[1] "SMC:  32.3536436293038"
[1] 0.3124519 0.4536648 0.4849970 0.5022947 0.6184146
[1] 0.3171960 0.4064066 0.4421618 0.5517672 0.7164809
[1] "SMC:  46.0451428418661"
[1] 0.3137685 0.4480552 0.4857834 0.5022947 0.6184146
[1] 0.3171960 0.4064066 0.4369513 0.5353969 0.7164809
[1] "SMC:  43.5509836701094"
[1] 0.3137685 0.4586273 0.4873502 0.5022947 0.6184146
[1] 0.3171960 0.4060491 0.4338369 0.5365084 0.7164809
[1] "SMC:  42.6936611440761"
[1] 0.3065853 0.4617692 0.4867977 0.5009361 0.6184146
[1] 0.3171960 0.4064066 0.4375992 0.5517672 0.7164809
[1] "SMC:  35.2256746881405"
acceptance rate:  0.3675 
[1] 0.3003694 0.4211196 0.4849970 0.4981698 0.5904757
[1] 0.3185924 0.4061772 0.4439276 0.5619469 0.6570863
[1] "18. 326.477309826967"
[1] 0.3003694 0.4211196 0.4857834 0.4981698 0.5904757
[1] 0.3185924 0.4061772 0.4426292 0.5716122 0.6570863
[1] "19. 277.989988474943"
[1] 0.3003694 0.4211196 0.4857834 0.4981698 0.5904757
[1] 0.3185924 0.4061772 0.4426292 0.5619469 0.6570863
[1] "20. 233.231053716672"
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
      user     system    elapsed 
242130.932   1881.275  16362.484 
