
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.2.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 40
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- NULL
> 
> #y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10 - 10, tp * 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 200
> Nx = 1000
> pacc = 0.05
> 
> lower_theta <- c(0.3, 0.4)
> upper_theta <- c(0.7, 0.6)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3002906 0.3725809 0.4809986 0.5633278 0.6982322
[1] 0.4023733 0.4479724 0.4974405 0.5434473 0.5977228
[1] "1. 183.829006665134"
[1] 0.3002906 0.3568802 0.4545478 0.5348457 0.6982322
[1] 0.4023733 0.4466898 0.4961331 0.5431754 0.5977228
[1] "2. 162.307026355479"
[1] 0.3002906 0.3531863 0.4427814 0.5168888 0.6982322
[1] 0.4023733 0.4444651 0.4933531 0.5424886 0.5977228
[1] "3. 150.558854555939"
[1] 0.3002906 0.3523801 0.4382752 0.5130682 0.6982322
[1] 0.4023733 0.4425580 0.4933531 0.5417536 0.5977228
[1] "4. 142.793191208112"
[1] 0.3002906 0.3518916 0.4285804 0.5083512 0.6982322
[1] 0.4023733 0.4425580 0.4933137 0.5417536 0.5977228
[1] "5. 131.953857876177"
[1] 0.3002906 0.3504491 0.4115018 0.5020806 0.6982322
[1] 0.4023733 0.4413595 0.4920962 0.5414875 0.5977228
[1] "6. 119.043082963276"
[1] 0.3002906 0.3509918 0.4133178 0.5030531 0.6982322
[1] 0.4023733 0.4379540 0.4880360 0.5373876 0.5977228
[1] "7. 117.744177474584"
[1] 0.3002906 0.3655346 0.4547984 0.5371446 0.6982322
[1] 0.4023733 0.4425580 0.4933137 0.5431754 0.5977228
[1] "8. 146.617823951812"
[1] 0.3002906 0.4133178 0.4944388 0.5606347 0.6982322
[1] 0.4023733 0.4425580 0.4932142 0.5431754 0.5977228
[1] "9. 158.066647147424"
[1] 0.3002906 0.3895003 0.4783382 0.5491699 0.6982322
[1] 0.4023733 0.4448844 0.4956261 0.5434688 0.5977228
[1] "10. 149.31809017347"
[1] 0.3002906 0.4094747 0.4872997 0.5536069 0.6982322
[1] 0.4023733 0.4444651 0.4933531 0.5434473 0.5977228
[1] "11. 147.149480468449"
[1] 0.3002906 0.4285804 0.5017836 0.5716353 0.6982322
[1] 0.4023733 0.4412048 0.4898012 0.5427192 0.5977228
[1] "12. 143.82920705297"
[1] 0.3002906 0.4186139 0.4978063 0.5633278 0.6982322
[1] 0.4023733 0.4379540 0.4881140 0.5414875 0.5977228
[1] "13. 139.015602880402"
[1] 0.3002906 0.4186139 0.4983938 0.5633278 0.6982322
[1] 0.4023733 0.4350939 0.4848090 0.5357357 0.5977228
[1] "14. 133.027101923582"
[1] 0.3002906 0.4382752 0.5081570 0.5769678 0.6982322
[1] 0.4023733 0.4347241 0.4819602 0.5339159 0.5977228
[1] "15. 123.988887975347"
[1] 0.3002906 0.4285804 0.5008612 0.5634196 0.6982322
[1] 0.4023733 0.4347241 0.4802935 0.5334279 0.5977228
[1] "16. 122.71326280113"
[1] 0.3002906 0.4285804 0.4983938 0.5633278 0.6982322
[1] 0.4023733 0.4350939 0.4810805 0.5322849 0.5977228
[1] "17. 116.30016363032"
[1] 0.3002906 0.4285804 0.4978063 0.5633278 0.6982322
[1] 0.4023733 0.4346593 0.4784771 0.5247827 0.5977228
[1] "18. 111.221486936937"
[1] 0.3002906 0.4164819 0.4837660 0.5536069 0.6982322
[1] 0.4023733 0.4347241 0.4802935 0.5248735 0.5977228
[1] "19. 110.679999322408"
[1] 0.3002906 0.4133178 0.4809986 0.5477000 0.6982322
[1] 0.4023733 0.4346593 0.4775549 0.5234388 0.5977228
[1] "20. 105.538830739863"
[1] 0.3002906 0.4094747 0.4783382 0.5464319 0.6982322
[1] 0.4023733 0.4346593 0.4749347 0.5221978 0.5977228
[1] "21. 97.0040005490527"
[1] "resample"
[1] 0.2764385 0.3909448 0.4581530 0.5174272 0.7189185
[1] 0.3795412 0.4331093 0.4821727 0.5232470 0.6038115
[1] "SMC:  186.823592568784"
[1] 0.2764385 0.3727861 0.4397006 0.5061606 0.7189185
[1] 0.3795412 0.4316478 0.4821727 0.5232404 0.6038115
[1] "SMC:  168.953699954132"
[1] 0.2764385 0.3704996 0.4390977 0.5036629 0.7189185
[1] 0.3795412 0.4311870 0.4806711 0.5200124 0.6038115
[1] "SMC:  162.899127298303"
[1] 0.2764385 0.3688832 0.4361923 0.5036629 0.7189185
[1] 0.3795412 0.4305399 0.4815412 0.5226753 0.6038115
[1] "SMC:  156.249373514344"
[1] 0.2764385 0.3678764 0.4241300 0.5024232 0.7189185
[1] 0.3795412 0.4305399 0.4806711 0.5200124 0.6038115
[1] "SMC:  148.930245258352"
[1] 0.2764385 0.3627351 0.4207418 0.4917988 0.7189185
[1] 0.3795412 0.4291224 0.4793305 0.5147318 0.6038115
[1] "SMC:  139.261139984338"
[1] 0.2764385 0.3630817 0.4211241 0.4909554 0.7189185
[1] 0.3795412 0.4291224 0.4765982 0.5134196 0.6038115
[1] "SMC:  136.558029970809"
[1] 0.2764385 0.3905718 0.4441084 0.5101732 0.7189185
[1] 0.3795412 0.4316478 0.4787477 0.5231451 0.6038115
[1] "SMC:  150.749708854862"
[1] 0.2764385 0.4129449 0.4800228 0.5218951 0.7189185
[1] 0.3795412 0.4316665 0.4756996 0.5147318 0.6038115
[1] "SMC:  150.418828072965"
[1] 0.2764385 0.4028001 0.4634461 0.5173510 0.7189185
[1] 0.3795412 0.4343785 0.4772040 0.5227141 0.6038115
[1] "SMC:  146.217208453419"
[1] 0.2764385 0.4129449 0.4800228 0.5218951 0.7189185
[1] 0.3795412 0.4343785 0.4762618 0.5231451 0.6038115
[1] "SMC:  143.474056569919"
[1] 0.2764385 0.4221559 0.4898472 0.5348073 0.7189185
[1] 0.3795412 0.4316665 0.4756996 0.5227141 0.6038115
[1] "SMC:  141.733952879225"
[1] 0.2764385 0.4207418 0.4838205 0.5333936 0.7189185
[1] 0.3795412 0.4316665 0.4756996 0.5200124 0.6038115
[1] "SMC:  140.177682596027"
[1] 0.2764385 0.4207418 0.4860450 0.5317704 0.7189185
[1] 0.3795412 0.4327874 0.4732745 0.5200124 0.6038115
[1] "SMC:  134.592767373178"
[1] 0.2764385 0.4361923 0.4949949 0.5490438 0.7189185
[1] 0.3795412 0.4316478 0.4732745 0.5147318 0.6038115
[1] "SMC:  127.415654016388"
[1] 0.2764385 0.4240997 0.4898472 0.5347850 0.7189185
[1] 0.3795412 0.4316478 0.4732745 0.5134196 0.6038115
[1] "SMC:  121.2423191827"
[1] 0.2764385 0.4221559 0.4898472 0.5346558 0.7189185
[1] 0.3795412 0.4316665 0.4732745 0.5200124 0.6038115
[1] "SMC:  116.644815581563"
[1] 0.2764385 0.4221559 0.4898472 0.5276129 0.7189185
[1] 0.3795412 0.4316478 0.4732745 0.5170967 0.6038115
[1] "SMC:  112.984749825201"
[1] 0.2764385 0.4175042 0.4838205 0.5218951 0.7189185
[1] 0.3795412 0.4316478 0.4732745 0.5200124 0.6038115
[1] "SMC:  115.184106786641"
[1] 0.2764385 0.4136942 0.4804164 0.5216358 0.7189185
[1] 0.3795412 0.4316665 0.4756996 0.5200124 0.6038115
[1] "SMC:  109.295205105323"
[1] 0.2764385 0.4129449 0.4768843 0.5174272 0.7189185
[1] 0.3795412 0.4316478 0.4756996 0.5200124 0.6038115
[1] "SMC:  110.470356256477"
acceptance rate:  0.725 
[1] 0.3089773 0.4129449 0.4634461 0.5064727 0.6533175
[1] 0.3795412 0.4316665 0.4661709 0.4983880 0.5811282
[1] "22. 196.146890483345"
[1] 0.3089773 0.4129449 0.4612920 0.5064727 0.6533175
[1] 0.3795412 0.4316478 0.4661709 0.4933531 0.5811282
[1] "23. 192.246461425356"
[1] 0.3089773 0.4129449 0.4612920 0.5025492 0.6533175
[1] 0.3795412 0.4316665 0.4661709 0.4983880 0.5811282
[1] "24. 190.687313507142"
[1] 0.3089773 0.4129449 0.4612920 0.5025492 0.6533175
[1] 0.3795412 0.4327874 0.4661709 0.4983880 0.5811282
[1] "25. 185.559523874909"
[1] 0.3089773 0.4065555 0.4547984 0.5014794 0.6533175
[1] 0.3795412 0.4327874 0.4661709 0.4983880 0.5811282
[1] "26. 181.629002411945"
[1] 0.3089773 0.4062873 0.4547984 0.4949949 0.6533175
[1] 0.3795412 0.4343785 0.4663208 0.4983880 0.5811282
[1] "27. 173.296785722471"
[1] 0.3089773 0.4291453 0.4813664 0.5218951 0.6533175
[1] 0.3795412 0.4327874 0.4663208 0.4994339 0.5811282
[1] "28. 157.759063414559"
[1] 0.3089773 0.4291453 0.4768843 0.5144804 0.6533175
[1] 0.3795412 0.4346593 0.4663208 0.4994339 0.5811282
[1] "29. 158.450087834345"
[1] 0.3089773 0.4718875 0.5064727 0.5570024 0.6533175
[1] 0.3795412 0.4316478 0.4661709 0.4933137 0.5811282
[1] "30. 115.898895063702"
[1] 0.3089773 0.4689304 0.5025492 0.5490438 0.6533175
[1] 0.3795412 0.4316478 0.4663208 0.4994339 0.5811282
[1] "31. 117.682965432227"
[1] 0.3089773 0.4800228 0.5130682 0.5633278 0.6533175
[1] 0.3795412 0.4305399 0.4650440 0.4880583 0.5811282
[1] "32. 94.9927669335778"
[1] "resample"
[1] 0.3566098 0.4591578 0.5102514 0.5544452 0.6732966
[1] 0.3763456 0.4322742 0.4619233 0.5021646 0.5938406
[1] "SMC:  192.550534341196"
[1] 0.3566098 0.4553088 0.4990392 0.5477553 0.6732966
[1] 0.3763456 0.4327230 0.4620189 0.5015928 0.5938406
[1] "SMC:  181.424004933766"
[1] 0.3566098 0.4543916 0.4981511 0.5474891 0.6732966
[1] 0.3763456 0.4336152 0.4625111 0.5015928 0.5938406
[1] "SMC:  177.306584691965"
[1] 0.3566098 0.4543916 0.4987805 0.5464382 0.6732966
[1] 0.3763456 0.4327230 0.4620189 0.4995832 0.5938406
[1] "SMC:  173.803654898678"
[1] 0.3566098 0.4543916 0.4981511 0.5464382 0.6732966
[1] 0.3763456 0.4324814 0.4620189 0.4974386 0.5938406
[1] "SMC:  165.867125932309"
[1] 0.3566098 0.4509558 0.4973586 0.5445530 0.6732966
[1] 0.3763456 0.4327230 0.4625111 0.4991096 0.5938406
[1] "SMC:  158.097303075492"
[1] 0.3566098 0.4498676 0.4963103 0.5464382 0.6732966
[1] 0.3763456 0.4324814 0.4620189 0.4989240 0.5938406
[1] "SMC:  154.804596711998"
[1] 0.3566098 0.4574603 0.5011230 0.5480893 0.6732966
[1] 0.3763456 0.4336152 0.4648144 0.4995832 0.5938406
[1] "SMC:  158.752476727196"
[1] 0.3566098 0.4687385 0.5113315 0.5538852 0.6732966
[1] 0.3763456 0.4322742 0.4614924 0.4945140 0.5938406
[1] "SMC:  159.767396019516"
[1] 0.3566098 0.4594198 0.5070548 0.5477553 0.6732966
[1] 0.3763456 0.4336152 0.4620189 0.4991096 0.5938406
[1] "SMC:  155.545985236459"
[1] 0.3566098 0.4651268 0.5102514 0.5480893 0.6732966
[1] 0.3763456 0.4327230 0.4620189 0.4974386 0.5938406
[1] "SMC:  147.295041020154"
[1] 0.3566098 0.4752156 0.5130916 0.5544452 0.6732966
[1] 0.3763456 0.4315953 0.4590757 0.4945140 0.5938406
[1] "SMC:  140.668687245055"
[1] 0.3566098 0.4752156 0.5113315 0.5535093 0.6732966
[1] 0.3763456 0.4322742 0.4590757 0.4945140 0.5938406
[1] "SMC:  132.633835129028"
[1] 0.3566098 0.4752156 0.5113315 0.5523403 0.6732966
[1] 0.3763456 0.4322742 0.4590757 0.4919307 0.5938406
[1] "SMC:  129.416245119625"
[1] 0.3566098 0.4791576 0.5197789 0.5555817 0.6732966
[1] 0.3763456 0.4315953 0.4589331 0.4895630 0.5938406
[1] "SMC:  123.358435874332"
[1] 0.3566098 0.4752156 0.5134937 0.5538852 0.6732966
[1] 0.3763456 0.4302563 0.4589331 0.4886503 0.5938406
[1] "SMC:  123.813082566251"
[1] 0.3566098 0.4752156 0.5134937 0.5538852 0.6732966
[1] 0.3763456 0.4315953 0.4590757 0.4894700 0.5938406
[1] "SMC:  123.013991067431"
[1] 0.3566098 0.4752156 0.5122315 0.5538852 0.6732966
[1] 0.3763456 0.4302563 0.4554649 0.4833857 0.5938406
[1] "SMC:  117.978248155234"
[1] 0.3566098 0.4687385 0.5121478 0.5535093 0.6732966
[1] 0.3763456 0.4302563 0.4589331 0.4855378 0.5938406
[1] "SMC:  119.232191902235"
[1] 0.3566098 0.4662083 0.5113315 0.5535093 0.6732966
[1] 0.3763456 0.4302563 0.4554649 0.4833857 0.5938406
[1] "SMC:  116.975510805828"
[1] 0.3566098 0.4640916 0.5103353 0.5480893 0.6732966
[1] 0.3763456 0.4302563 0.4554649 0.4833857 0.5938406
[1] "SMC:  115.578790492254"
[1] 0.3566098 0.4597389 0.5102514 0.5477553 0.6732966
[1] 0.3763456 0.4302563 0.4542852 0.4831766 0.5938406
[1] "SMC:  110.706049820079"
[1] 0.3566098 0.4594198 0.5088191 0.5474891 0.6732966
[1] 0.3763456 0.4302563 0.4542852 0.4831766 0.5938406
[1] "SMC:  108.969154958884"
[1] 0.3566098 0.4597389 0.5102514 0.5477553 0.6732966
[1] 0.3763456 0.4315953 0.4554649 0.4833857 0.5938406
[1] "SMC:  102.049807704186"
[1] 0.3566098 0.4597389 0.5088191 0.5460340 0.6732966
[1] 0.3763456 0.4315953 0.4590757 0.4855378 0.5938406
[1] "SMC:  100.687235667184"
[1] 0.3566098 0.4591578 0.5073655 0.5445530 0.6732966
[1] 0.3763456 0.4315953 0.4589331 0.4833857 0.5938406
[1] "SMC:  104.371108335193"
[1] 0.3566098 0.4574603 0.5011230 0.5390972 0.6732966
[1] 0.3763456 0.4322742 0.4590757 0.4855378 0.5938406
[1] "SMC:  99.1621176015261"
[1] 0.3566098 0.4799329 0.5197789 0.5538852 0.6732966
[1] 0.3763456 0.4279856 0.4554649 0.4886503 0.5938406
[1] "SMC:  98.8601519929851"
[1] 0.3566098 0.4687385 0.5113315 0.5480893 0.6732966
[1] 0.3763456 0.4315953 0.4590757 0.4886503 0.5938406
[1] "SMC:  94.9213414092973"
[1] 0.3566098 0.4958169 0.5318065 0.5774920 0.6732966
[1] 0.3763456 0.4234546 0.4474646 0.4855378 0.5938406
[1] "SMC:  91.0580169893441"
[1] 0.3566098 0.4946244 0.5314070 0.5591558 0.6732966
[1] 0.3763456 0.4285163 0.4589331 0.4995832 0.5938406
[1] "SMC:  85.5473505507046"
[1] 0.3566098 0.5044413 0.5389121 0.5830733 0.6732966
[1] 0.3763456 0.4219212 0.4476055 0.4886503 0.5938406
[1] "SMC:  78.9369722511904"
acceptance rate:  0.67 
[1] 0.4361923 0.5102514 0.5359179 0.5812046 0.6354870
[1] 0.3763456 0.4234546 0.4554649 0.5015928 0.5782375
[1] "33. 195.320802882337"
[1] 0.4361923 0.5102514 0.5359179 0.5774920 0.6354870
[1] 0.3763456 0.4234546 0.4554649 0.5015928 0.5782375
[1] "34. 191.607137970314"
[1] 0.4361923 0.5102514 0.5359179 0.5774920 0.6354870
[1] 0.3763456 0.4234546 0.4554649 0.5015928 0.5782375
[1] "35. 186.45976299564"
[1] 0.4361923 0.5102514 0.5359179 0.5774920 0.6354870
[1] 0.3763456 0.4234546 0.4554649 0.5015928 0.5782375
[1] "36. 180.387098687087"
[1] 0.4361923 0.5106756 0.5389121 0.5812046 0.6354870
[1] 0.3763456 0.4234546 0.4540260 0.5038257 0.5782375
[1] "37. 174.813103231752"
[1] 0.4361923 0.5130916 0.5460340 0.5833993 0.6354870
[1] 0.3763456 0.4204747 0.4446894 0.5015928 0.5782375
[1] "38. 165.167580002432"
[1] 0.4361923 0.5130916 0.5477553 0.5833993 0.6354870
[1] 0.3763456 0.4204747 0.4446894 0.4918296 0.5782375
[1] "39. 162.224429846165"
[1] 0.4361923 0.5130916 0.5477553 0.5922948 0.6354870
[1] 0.3763456 0.4172839 0.4444582 0.4894700 0.5782375
[1] "40. 155.877960813963"
There were 50 or more warnings (use warnings() to see the first 50)
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()	
> save(state_df, file = "state_df.RData")	
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
     user    system   elapsed 
20537.071   446.754  1443.032 
