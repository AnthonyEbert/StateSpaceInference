
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.1.0

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 20
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10, tp * 10 + 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 200
> Nx = 1000
> pacc = 0.005
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3032790 0.3738204 0.4598944 0.5584886 0.6992435
[1] 0.3053522 0.4039199 0.4965752 0.5799561 0.6998184
[1] "1. 164.127927927928"
[1] 0.3032790 0.3890356 0.4586047 0.5540775 0.6992435
[1] 0.3053522 0.3895862 0.4931651 0.5751144 0.6998184
[1] "2. 140.692473262931"
[1] 0.3032790 0.3701785 0.4333930 0.5261472 0.6992435
[1] 0.3053522 0.3874543 0.4766928 0.5699406 0.6998184
[1] "3. 114.288282897548"
[1] 0.3034827 0.3770292 0.4353337 0.5235980 0.6992435
[1] 0.3053522 0.3881186 0.4820323 0.5748977 0.6998184
[1] "4. 100.925248730805"
[1] 0.3032790 0.3670812 0.4333930 0.5209987 0.6992435
[1] 0.3004527 0.3840723 0.4876356 0.5744165 0.6998184
[1] "5. 87.6333839069317"
[1] "resample"
[1] 0.2835596 0.3516416 0.4115480 0.5132800 0.7356592
[1] 0.2782735 0.3907359 0.4662721 0.5685048 0.7560341
[1] "SMC:  168.04440333025"
[1] 0.2849796 0.3637225 0.4210819 0.5139180 0.7356592
[1] 0.2782735 0.3871459 0.4557513 0.5599688 0.7560341
[1] "SMC:  142.027804462098"
[1] 0.2849796 0.3592152 0.4116278 0.4934806 0.7356592
[1] 0.2782735 0.3817018 0.4441264 0.5573558 0.7560341
[1] "SMC:  117.84863714426"
[1] 0.2849796 0.3575018 0.4116278 0.5023013 0.7356592
[1] 0.2782735 0.3724264 0.4363200 0.5467143 0.7560341
[1] "SMC:  99.41548044698"
[1] 0.2849796 0.3626566 0.4116278 0.4942684 0.7356592
[1] 0.2963070 0.3774174 0.4265438 0.5464536 0.7560341
[1] "SMC:  78.532849926618"
acceptance rate:  0.65 
[1] 0.3015206 0.3626566 0.4094968 0.4724885 0.6922160
[1] 0.3147025 0.3724264 0.4205264 0.5229360 0.6858906
[1] "6. 169"
[1] 0.3015206 0.3592152 0.3990918 0.4604008 0.6922160
[1] 0.3147025 0.3817018 0.4230198 0.5253766 0.6858906
[1] "7. 135.654703519655"
[1] 0.3015206 0.3569307 0.3963181 0.4464225 0.6922160
[1] 0.3147025 0.3817018 0.4205264 0.5229360 0.6858906
[1] "8. 115.707845961524"
[1] 0.3015206 0.3569307 0.3990918 0.4611004 0.6922160
[1] 0.3107959 0.3774174 0.4205264 0.5229360 0.6858906
[1] "9. 99.3960503856572"
[1] "resample"
[1] 0.2855918 0.3376675 0.3913027 0.4528809 0.6602672
[1] 0.2805064 0.3739964 0.4165525 0.5186870 0.6636392
[1] "SMC:  169.626188925081"
[1] 0.2855918 0.3400857 0.3915744 0.4509921 0.6602672
[1] 0.2805064 0.3746641 0.4129842 0.5157918 0.6636392
[1] "SMC:  140.412084738315"
[1] 0.2855918 0.3376675 0.3898019 0.4356604 0.6602672
[1] 0.2805064 0.3745885 0.4129842 0.5145913 0.6636392
[1] "SMC:  109.799714284381"
[1] 0.2855918 0.3385264 0.3929501 0.4281303 0.6602672
[1] 0.3045184 0.3745885 0.4135510 0.5175775 0.6636392
[1] "SMC:  92.3737260299378"
[1] 0.2855918 0.3376675 0.3884287 0.4273183 0.6602672
[1] 0.3045184 0.3745885 0.4160853 0.5205334 0.6636392
[1] "SMC:  79.619813255675"
[1] 0.2855918 0.3376675 0.3877343 0.4273183 0.6602672
[1] 0.2959636 0.3745885 0.4141177 0.5184506 0.6636392
[1] "SMC:  72.1268324539862"
[1] 0.2855918 0.3376395 0.3780859 0.4169421 0.6602672
[1] 0.3056444 0.3781451 0.4237889 0.5377548 0.6636392
[1] "SMC:  67.2046759033751"
[1] 0.2855918 0.3375553 0.3766784 0.4152334 0.6602672
[1] 0.3056444 0.3752198 0.4219231 0.5402866 0.6636392
[1] "SMC:  57.881056772888"
[1] 0.2864774 0.3491754 0.3870429 0.4166384 0.6602672
[1] 0.2959636 0.3781451 0.4237889 0.5614456 0.6636392
[1] "SMC:  52.2993004574324"
acceptance rate:  0.635 
[1] 0.3015206 0.3755455 0.3940925 0.4236379 0.5693887
[1] 0.3162106 0.3745885 0.4237889 0.5698331 0.6636392
[1] "10. 148.952133194589"
[1] 0.3015206 0.3663946 0.3940925 0.4058470 0.5693887
[1] 0.3162106 0.3874707 0.4286133 0.5698331 0.6636392
[1] "11. 129.113627939541"
[1] 0.3015206 0.3755455 0.3946833 0.4134268 0.5693887
[1] 0.3162106 0.3729670 0.4286133 0.5698331 0.6636392
[1] "12. 94.0526356803831"
[1] "resample"
[1] 0.2970135 0.3685007 0.3921279 0.4127751 0.5800851
[1] 0.3028901 0.3837912 0.4346640 0.5714044 0.7305678
[1] "SMC:  170.134815844336"
[1] 0.2970135 0.3670510 0.3916778 0.4124749 0.5800851
[1] 0.2939517 0.3855657 0.4405412 0.5815571 0.7305678
[1] "SMC:  146.135922645385"
[1] 0.2970135 0.3665784 0.3915288 0.4109734 0.5800851
[1] 0.3032310 0.3858389 0.4318750 0.5715857 0.7305678
[1] "SMC:  122.242190132429"
[1] 0.2970135 0.3658857 0.3916778 0.4109513 0.5800851
[1] 0.3032310 0.3866650 0.4222705 0.5667206 0.7305678
[1] "SMC:  92.9126554790497"
[1] 0.2970135 0.3662519 0.3924727 0.4109669 0.5800851
[1] 0.3032310 0.3827845 0.4249066 0.5695375 0.7305678
[1] "SMC:  90.6281760635949"
[1] 0.2970135 0.3602700 0.3916778 0.4106091 0.5800851
[1] 0.3098280 0.3750467 0.4214338 0.5644143 0.7305678
[1] "SMC:  77.5536071928978"
[1] 0.2970135 0.3568518 0.3892993 0.4067181 0.5800851
[1] 0.3098280 0.3746053 0.4210238 0.5393308 0.7305678
[1] "SMC:  56.3031257638997"
[1] 0.2970135 0.3220146 0.3869552 0.4049792 0.5800851
[1] 0.3032310 0.3753332 0.4210238 0.5240435 0.7305678
[1] "SMC:  43.0921897182811"
[1] 0.2970135 0.3583825 0.3903565 0.4109690 0.5800851
[1] 0.3032310 0.3763049 0.4176850 0.5240435 0.7305678
[1] "SMC:  51.3939996444749"
[1] 0.3071829 0.3756153 0.3930986 0.4296961 0.5800851
[1] 0.3032310 0.3753332 0.4218522 0.5396714 0.7305678
[1] "SMC:  50.1868036902677"
[1] 0.3022400 0.3624491 0.3908890 0.4199606 0.5800851
[1] 0.3032310 0.3927236 0.4558002 0.5425030 0.7305678
[1] "SMC:  40.8150755879347"
[1] 0.3109573 0.3751842 0.3927350 0.4168532 0.5800851
[1] 0.3198116 0.3772765 0.4536924 0.5661411 0.7151231
[1] "SMC:  33.1719141506053"
acceptance rate:  0.505 
[1] 0.3147256 0.3771712 0.3957991 0.4263549 0.5728797
[1] 0.3162106 0.3784915 0.4924050 0.5698331 0.6787788
[1] "13. 165.592629317468"
[1] 0.3147256 0.3771712 0.3940925 0.4234649 0.5728797
[1] 0.3162106 0.3753332 0.4924050 0.5698331 0.6787788
[1] "14. 139.956619196842"
[1] 0.3147256 0.3771712 0.3940925 0.4109734 0.5728797
[1] 0.3162106 0.3753332 0.4924050 0.5698331 0.6787788
[1] "15. 106.35153642711"
[1] 0.3147256 0.3771712 0.3940925 0.4109734 0.5728797
[1] 0.3162106 0.3753332 0.4924050 0.5698331 0.6787788
[1] "16. 78.9301246566506"
[1] "resample"
[1] 0.3073367 0.3703292 0.3929314 0.4215674 0.5751288
[1] 0.3065371 0.3744383 0.4642364 0.5584217 0.7398862
[1] "SMC:  165.485976789168"
[1] 0.3073367 0.3681618 0.3908878 0.4174259 0.5751288
[1] 0.3098119 0.3725621 0.4630292 0.5585082 0.7398862
[1] "SMC:  143.016514041091"
[1] 0.3073367 0.3656214 0.3886790 0.4120616 0.5751288
[1] 0.3065371 0.3690596 0.4339320 0.5583929 0.7398862
[1] "SMC:  116.971237672942"
[1] 0.3073367 0.3652530 0.3908530 0.4127065 0.5751288
[1] 0.3065371 0.3652843 0.4109626 0.5454500 0.7398862
[1] "SMC:  88.7491766667517"
[1] 0.3073367 0.3648838 0.3907127 0.4097416 0.5751288
[1] 0.3098119 0.3674567 0.3978582 0.5232118 0.7398862
[1] "SMC:  74.1282939907025"
[1] 0.3073367 0.3648529 0.3914384 0.4097416 0.5751288
[1] 0.3065371 0.3645917 0.3966082 0.5123094 0.7398862
[1] "SMC:  63.7694297057439"
[1] 0.3073367 0.3653598 0.3944796 0.4070259 0.5751288
[1] 0.3098119 0.3636233 0.3897075 0.5027672 0.7398862
[1] "SMC:  50.2853209516819"
[1] 0.3073367 0.3645914 0.3909436 0.4058576 0.5751288
[1] 0.3118229 0.3599397 0.3897075 0.4995760 0.7398862
[1] "SMC:  44.6886818029869"
[1] 0.3073367 0.3648529 0.3912242 0.4079537 0.5751288
[1] 0.3169150 0.3535486 0.3892196 0.4883162 0.7398862
[1] "SMC:  34.6899954631444"
[1] 0.3119749 0.3780009 0.3948430 0.4567151 0.5751288
[1] 0.3169150 0.3535486 0.3901200 0.4918695 0.7398862
[1] "SMC:  23.5494145106497"
[1] 0.3119749 0.3816273 0.4030209 0.5119399 0.5751288
[1] 0.3215593 0.3645917 0.4088501 0.4674564 0.7398862
[1] "SMC:  18.4726213360669"
[1] 0.3119749 0.3891148 0.4097416 0.5119399 0.5751288
[1] 0.3215593 0.3690596 0.4211179 0.4632402 0.7398862
[1] "SMC:  11.1094368993089"
[1] 0.3127610 0.3914384 0.5119399 0.5119399 0.5751288
[1] 0.3173055 0.3719078 0.4211179 0.4674564 0.7398862
[1] "SMC:  9.99210833907291"
[1] 0.3073367 0.3905658 0.4185591 0.5119399 0.5751288
[1] 0.3118229 0.3644792 0.4211179 0.4674564 0.7398862
[1] "SMC:  13.7465450425972"
[1] 0.3073367 0.3905658 0.5119399 0.5119399 0.5751288
[1] 0.3118229 0.3645636 0.4211179 0.4408882 0.7398862
[1] "SMC:  9.62760574531833"
[1] 0.3073367 0.3909436 0.5119399 0.5119399 0.5751288
[1] 0.3118229 0.3892196 0.4211179 0.4362649 0.7398862
[1] "SMC:  6.5582556205845"
acceptance rate:  0.455 
[1] 0.3593052 0.3916778 0.5119399 0.5119399 0.5456383
[1] 0.3223004 0.4211179 0.4211179 0.5698331 0.6787788
[1] "17. 162.477866061294"
[1] 0.3662519 0.3944677 0.5119399 0.5119399 0.5456383
[1] 0.3223004 0.4211179 0.4211179 0.5698331 0.6787788
[1] "18. 132.911406587688"
[1] 0.3662519 0.3916778 0.5119399 0.5119399 0.5456383
[1] 0.3223004 0.4211179 0.4211179 0.5698331 0.6787788
[1] "19. 110.113223249507"
[1] 0.3662519 0.3916778 0.5119399 0.5119399 0.5456383
[1] 0.3223004 0.4211179 0.4211179 0.5698331 0.6787788
[1] "20. 89.9442036977243"
[1] "resample"
[1] 0.3384185 0.3926654 0.4938176 0.5163754 0.5711515
[1] 0.2959806 0.3926609 0.4333713 0.5270478 0.7192153
[1] "SMC:  171.089876378216"
[1] 0.3384185 0.3930592 0.4894236 0.5189212 0.5711515
[1] 0.2959806 0.3923353 0.4323941 0.5454619 0.7192153
[1] "SMC:  148.489431261527"
[1] 0.3384185 0.3934926 0.4922980 0.5193276 0.5711515
[1] 0.2959806 0.3874745 0.4298897 0.5211041 0.7192153
[1] "SMC:  130.048543243727"
[1] 0.3384185 0.3914001 0.4834772 0.5139578 0.5711515
[1] 0.2959806 0.3864427 0.4298897 0.5473210 0.7192153
[1] "SMC:  102.042071173702"
[1] 0.3384185 0.3909401 0.4304825 0.5098618 0.5711515
[1] 0.2959806 0.3880143 0.4306852 0.5558959 0.7192153
[1] "SMC:  88.4553888913842"
[1] 0.3384185 0.3841380 0.4834772 0.5104195 0.5711515
[1] 0.3047981 0.3909096 0.4296631 0.5462582 0.7192153
[1] "SMC:  76.0989812268061"
[1] 0.3384185 0.3846003 0.4906605 0.5088986 0.5711515
[1] 0.3047981 0.3904336 0.4333630 0.5241372 0.7192153
[1] "SMC:  61.9010051411295"
[1] 0.3384185 0.3823167 0.4790080 0.5064073 0.5711515
[1] 0.3047981 0.3904336 0.4294365 0.5237019 0.7192153
[1] "SMC:  50.3940726212594"
[1] 0.3384185 0.3914001 0.4851644 0.5064073 0.5711515
[1] 0.3047981 0.3845503 0.4232325 0.5057575 0.7192153
[1] "SMC:  46.8587693339271"
[1] 0.3384185 0.3915534 0.4968701 0.5207510 0.5711515
[1] 0.3047981 0.3800960 0.4199924 0.4817120 0.7192153
[1] "SMC:  37.5890752540827"
[1] 0.3384185 0.3866012 0.4841444 0.5088146 0.5711515
[1] 0.3047981 0.3877444 0.4376911 0.5288153 0.7192153
[1] "SMC:  30.5959249339021"
[1] 0.3384185 0.3916510 0.4982204 0.5201370 0.5711515
[1] 0.3047981 0.4041841 0.4380080 0.4818958 0.7192153
[1] "SMC:  28.7272660743603"
[1] 0.3384185 0.3980092 0.5012296 0.5063010 0.5711515
[1] 0.3047981 0.4041841 0.4224526 0.4746132 0.7192153
[1] "SMC:  23.4647972232763"
[1] 0.3384185 0.3980092 0.5012296 0.5143122 0.5711515
[1] 0.3047981 0.3885202 0.4224526 0.4525131 0.7192153
[1] "SMC:  24.1656911216607"
[1] 0.3384185 0.3980092 0.5012296 0.5208857 0.5711515
[1] 0.3047981 0.4031755 0.4380080 0.4818039 0.7192153
[1] "SMC:  19.378297012955"
[1] 0.3384185 0.4034203 0.5012296 0.5109744 0.5711515
[1] 0.3047981 0.4041841 0.4380080 0.4675756 0.7192153
[1] "SMC:  16.9749490347717"
[1] 0.3384185 0.3980092 0.4938176 0.5058774 0.5711515
[1] 0.3078153 0.4041841 0.4524238 0.4774974 0.7192153
[1] "SMC:  10.6144937441109"
[1] 0.3384185 0.3980092 0.5058774 0.5058774 0.5711515
[1] 0.3047981 0.4041841 0.4242010 0.4708828 0.7192153
[1] "SMC:  8.39709932136095"
[1] 0.3384185 0.3927119 0.5036279 0.5079327 0.5711515
[1] 0.3078153 0.4041841 0.4397048 0.4818958 0.7192153
[1] "SMC:  11.4876809217305"
[1] 0.3384185 0.3873040 0.5036279 0.5058774 0.5711515
[1] 0.3078153 0.4041841 0.4387772 0.4818958 0.7192153
[1] "SMC:  9.16207267066963"
acceptance rate:  0.505 
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
     user    system   elapsed 
14496.727   301.956  1572.662 
