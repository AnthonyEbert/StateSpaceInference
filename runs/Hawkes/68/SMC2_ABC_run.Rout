
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.2.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 40
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- NULL
> 
> #y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10 - 10, tp * 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 2000
> Nx = 10000
> pacc = 0.05
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3002906 0.3704586 0.4557265 0.5627082 0.6998914
[1] 0.3000840 0.3837387 0.4835912 0.5874206 0.6996109
[1] "1. 1858.64043968385"
[1] 0.3002906 0.3569774 0.4295881 0.5279044 0.6998914
[1] 0.3000840 0.3768209 0.4777339 0.5783583 0.6996109
[1] "2. 1642.5681760667"
[1] 0.3002906 0.3549353 0.4205814 0.5171170 0.6998914
[1] 0.3000840 0.3694519 0.4670200 0.5695785 0.6996109
[1] "3. 1547.06619341301"
[1] 0.3002906 0.3539502 0.4177453 0.5154275 0.6998914
[1] 0.3000840 0.3669573 0.4624272 0.5644704 0.6996109
[1] "4. 1507.02370719716"
[1] 0.3002906 0.3523801 0.4141056 0.5072187 0.6998914
[1] 0.3000840 0.3656672 0.4577575 0.5631537 0.6996109
[1] "5. 1441.21476012255"
[1] 0.3002906 0.3457577 0.4041308 0.4937762 0.6998914
[1] 0.3000840 0.3640836 0.4560502 0.5616178 0.6996109
[1] "6. 1326.62619474488"
[1] 0.3002906 0.3458090 0.4042954 0.4934913 0.6998914
[1] 0.3000840 0.3621226 0.4502162 0.5573111 0.6996109
[1] "7. 1304.13551779378"
[1] 0.3002906 0.3608992 0.4321763 0.5253840 0.6998914
[1] 0.3000840 0.3726434 0.4700029 0.5718680 0.6996109
[1] "8. 1614.26186824044"
[1] 0.3002906 0.4010594 0.4782937 0.5588744 0.6998914
[1] 0.3000840 0.3657172 0.4553985 0.5585026 0.6996109
[1] "9. 1699.560067448"
[1] 0.3002906 0.3804917 0.4529703 0.5369980 0.6998914
[1] 0.3000840 0.3749931 0.4732381 0.5735535 0.6996109
[1] "10. 1699.5791678272"
[1] 0.3002906 0.3938728 0.4673236 0.5470976 0.6998914
[1] 0.3000840 0.3732900 0.4693418 0.5693566 0.6996109
[1] "11. 1703.18541448884"
[1] 0.3002906 0.4141056 0.4902901 0.5668864 0.6998914
[1] 0.3000840 0.3727267 0.4644079 0.5632748 0.6996109
[1] "12. 1721.09662365794"
[1] 0.3002906 0.4057305 0.4809986 0.5566262 0.6998914
[1] 0.3000840 0.3693013 0.4589530 0.5590704 0.6996109
[1] "13. 1670.3366663679"
[1] 0.3002906 0.4057305 0.4806803 0.5565701 0.6998914
[1] 0.3000840 0.3684190 0.4575647 0.5577674 0.6996109
[1] "14. 1658.2817022576"
[1] 0.3002906 0.4201217 0.4972982 0.5729513 0.6998914
[1] 0.3000840 0.3693410 0.4580763 0.5576882 0.6996109
[1] "15. 1671.77679482274"
[1] 0.3002906 0.4100672 0.4852981 0.5602345 0.6998914
[1] 0.3000840 0.3668321 0.4521828 0.5520855 0.6996109
[1] "16. 1631.84679483321"
[1] 0.3002906 0.4082812 0.4822594 0.5568293 0.6998914
[1] 0.3000840 0.3672972 0.4547059 0.5548118 0.6996109
[1] "17. 1625.77526546053"
[1] 0.3002906 0.4044955 0.4782937 0.5550205 0.6998914
[1] 0.3000840 0.3629060 0.4440074 0.5412710 0.6996109
[1] "18. 1567.16208436648"
[1] 0.3002906 0.3963824 0.4665188 0.5429360 0.6998914
[1] 0.3000840 0.3629060 0.4446079 0.5436715 0.6996109
[1] "19. 1535.84842747904"
[1] 0.3002906 0.3929101 0.4615342 0.5364456 0.6998914
[1] 0.3000840 0.3613679 0.4396323 0.5390120 0.6996109
[1] "20. 1492.24429869793"
[1] 0.3002906 0.3859816 0.4539153 0.5305787 0.6998914
[1] 0.3000840 0.3602050 0.4371987 0.5372086 0.6996109
[1] "21. 1454.70924412816"
[1] 0.3002906 0.3829986 0.4486450 0.5255208 0.6998914
[1] 0.3000840 0.3555896 0.4275965 0.5312288 0.6996109
[1] "22. 1391.59726109367"
[1] 0.3002906 0.3814238 0.4470162 0.5242127 0.6998914
[1] 0.3000840 0.3557314 0.4293525 0.5318184 0.6996109
[1] "23. 1391.17601663812"
[1] 0.3002906 0.3805082 0.4464992 0.5231742 0.6998914
[1] 0.3000840 0.3602050 0.4353724 0.5350156 0.6996109
[1] "24. 1411.62559048561"
[1] 0.3002906 0.3767273 0.4413269 0.5170950 0.6998914
[1] 0.3000840 0.3628431 0.4429014 0.5393005 0.6996109
[1] "25. 1406.94407178695"
[1] 0.3002906 0.3734168 0.4363389 0.5108441 0.6998914
[1] 0.3000840 0.3621226 0.4419800 0.5390120 0.6996109
[1] "26. 1370.11589403465"
[1] 0.3002906 0.3650186 0.4257122 0.4994257 0.6998914
[1] 0.3000840 0.3633042 0.4453239 0.5438267 0.6996109
[1] "27. 1317.12264680709"
[1] 0.3002906 0.4249541 0.4914627 0.5606347 0.6998914
[1] 0.3000840 0.3664833 0.4493035 0.5422356 0.6996109
[1] "28. 1458.03954927519"
[1] 0.3002906 0.4175772 0.4806803 0.5432048 0.6998914
[1] 0.3000840 0.3633042 0.4428773 0.5349043 0.6996109
[1] "29. 1332.50480222508"
[1] 0.3002906 0.4856931 0.5348457 0.5886877 0.6998914
[1] 0.3000840 0.3567701 0.4302909 0.5211612 0.6996109
[1] "30. 1107.80331314555"
[1] 0.3002906 0.4747779 0.5284003 0.5863509 0.6998914
[1] 0.3000840 0.3822308 0.4683206 0.5595465 0.6996109
[1] "31. 1291.44559872768"
[1] 0.3002906 0.4994257 0.5545348 0.6081480 0.6998914
[1] 0.3000840 0.3743415 0.4577575 0.5452446 0.6996109
[1] "32. 1171.47873989643"
[1] 0.3002906 0.5052316 0.5601303 0.6116516 0.6998914
[1] 0.3000840 0.3842507 0.4675950 0.5575510 0.6996109
[1] "33. 1174.32478470695"
[1] 0.3002906 0.5001239 0.5554018 0.6088801 0.6998914
[1] 0.3000840 0.3746496 0.4568716 0.5447208 0.6996109
[1] "34. 1154.1028087704"
[1] 0.3002906 0.4987722 0.5528001 0.6070587 0.6998914
[1] 0.3000840 0.3709057 0.4513292 0.5357714 0.6996109
[1] "35. 1134.19931627691"
[1] 0.3002906 0.4948831 0.5483539 0.6031701 0.6998914
[1] 0.3000840 0.3692806 0.4482333 0.5322945 0.6996109
[1] "36. 1126.77628910517"
[1] 0.3002906 0.5101743 0.5638005 0.6159934 0.6998914
[1] 0.3000840 0.3822308 0.4627807 0.5517319 0.6996109
[1] "37. 1140.0325843347"
[1] 0.3002906 0.5286938 0.5832340 0.6314615 0.6998914
[1] 0.3000840 0.3746639 0.4527566 0.5390411 0.6996109
[1] "38. 1024.68823608968"
[1] 0.3002906 0.5297361 0.5841473 0.6329757 0.6998914
[1] 0.3000840 0.3748532 0.4521828 0.5357216 0.6996109
[1] "39. 1008.13705413762"
[1] 0.3002906 0.5289072 0.5837303 0.6329757 0.6998914
[1] 0.3000840 0.3702784 0.4429014 0.5258302 0.6996109
[1] "40. 976.215748298748"
[1] "resample"
[1] 0.3422894 0.5128655 0.5695320 0.6191194 0.7598965
[1] 0.2637180 0.3647291 0.4304574 0.5184764 0.7846644
[1] "SMC:  1936.00317746297"
[1] 0.3422894 0.5018655 0.5582192 0.6069400 0.7598965
[1] 0.2637180 0.3606179 0.4252024 0.5113134 0.7846644
[1] "SMC:  1784.72309733823"
[1] 0.3422894 0.4987776 0.5551279 0.6042212 0.7598965
[1] 0.2637180 0.3569958 0.4180019 0.5047886 0.7846644
[1] "SMC:  1698.99358152976"
[1] 0.3422894 0.4987776 0.5556461 0.6046708 0.7598965
[1] 0.2637180 0.3545797 0.4142197 0.5001177 0.7846644
[1] "SMC:  1674.84742354597"
[1] 0.3422894 0.4961403 0.5535716 0.6036374 0.7598965
[1] 0.2637180 0.3528618 0.4109019 0.4965722 0.7846644
[1] "SMC:  1620.48599907752"
[1] 0.3422894 0.4932742 0.5486716 0.6011088 0.7598965
[1] 0.2637180 0.3514520 0.4081174 0.4939957 0.7846644
[1] "SMC:  1531.60422193659"
[1] 0.3422894 0.4933396 0.5486682 0.6010794 0.7598965
[1] 0.2637180 0.3476921 0.4021953 0.4883288 0.7846644
[1] "SMC:  1490.65216290512"
[1] 0.3422894 0.5007892 0.5559232 0.6043022 0.7598965
[1] 0.2637180 0.3570407 0.4180004 0.5042681 0.7846644
[1] "SMC:  1695.70307730756"
[1] 0.3422894 0.5074969 0.5616140 0.6064843 0.7598965
[1] 0.2637180 0.3527958 0.4100282 0.4951996 0.7846644
[1] "SMC:  1701.22259321155"
[1] 0.3422894 0.5013025 0.5550618 0.6026013 0.7598965
[1] 0.2637180 0.3584720 0.4218601 0.5056119 0.7846644
[1] "SMC:  1694.33274059846"
[1] 0.3422894 0.5024927 0.5550618 0.6014035 0.7598965
[1] 0.2637180 0.3597454 0.4229863 0.5057310 0.7846644
[1] "SMC:  1685.6266616566"
[1] 0.3422894 0.5102525 0.5631021 0.6063587 0.7598965
[1] 0.2637180 0.3608571 0.4218601 0.5042681 0.7846644
[1] "SMC:  1753.93685968152"
[1] 0.3422894 0.5068385 0.5578947 0.6030793 0.7598965
[1] 0.2637180 0.3579286 0.4170576 0.4992115 0.7846644
[1] "SMC:  1678.48991570339"
[1] 0.3422894 0.5068385 0.5582192 0.6033290 0.7598965
[1] 0.2637180 0.3576151 0.4157395 0.4976101 0.7846644
[1] "SMC:  1670.21810785887"
[1] 0.3422894 0.5131652 0.5647757 0.6081552 0.7598965
[1] 0.2637180 0.3581677 0.4166497 0.4973811 0.7846644
[1] "SMC:  1734.10578388325"
[1] 0.3422894 0.5073426 0.5602366 0.6045263 0.7598965
[1] 0.2637180 0.3562017 0.4126913 0.4939018 0.7846644
[1] "SMC:  1658.66785280891"
[1] 0.3422894 0.5069461 0.5583200 0.6033420 0.7598965
[1] 0.2637180 0.3570407 0.4142197 0.4949201 0.7846644
[1] "SMC:  1642.83720617801"
[1] 0.3422894 0.5064089 0.5578947 0.6030793 0.7598965
[1] 0.2637180 0.3527958 0.4060199 0.4864096 0.7846644
[1] "SMC:  1580.26887279617"
[1] 0.3422894 0.5018655 0.5535447 0.6000447 0.7598965
[1] 0.2637180 0.3523476 0.4060199 0.4866981 0.7846644
[1] "SMC:  1524.67051530482"
[1] 0.3422894 0.4996434 0.5502879 0.5974296 0.7598965
[1] 0.2637180 0.3510745 0.4026265 0.4832022 0.7846644
[1] "SMC:  1468.7578618988"
[1] 0.3422894 0.4961403 0.5473448 0.5954813 0.7598965
[1] 0.2637180 0.3494756 0.4008763 0.4815660 0.7846644
[1] "SMC:  1416.93578073312"
[1] 0.3422894 0.4944121 0.5453294 0.5932925 0.7598965
[1] 0.2637180 0.3453094 0.3959043 0.4745003 0.7846644
[1] "SMC:  1339.38693783215"
[1] 0.3422894 0.4942612 0.5448973 0.5935054 0.7598965
[1] 0.2637180 0.3453567 0.3960160 0.4741003 0.7846644
[1] "SMC:  1337.02451237479"
[1] 0.3422894 0.4936022 0.5439673 0.5917908 0.7598965
[1] 0.2637180 0.3494756 0.4001139 0.4795027 0.7846644
[1] "SMC:  1354.44233484049"
[1] 0.3422894 0.4924327 0.5400476 0.5906586 0.7598965
[1] 0.2637180 0.3516530 0.4031443 0.4830110 0.7846644
[1] "SMC:  1340.87693535983"
[1] 0.3422894 0.4897346 0.5383307 0.5894621 0.7598965
[1] 0.2637180 0.3499831 0.4014128 0.4804510 0.7846644
[1] "SMC:  1298.09019627129"
[1] 0.3422894 0.4866912 0.5320076 0.5843003 0.7598965
[1] 0.2637180 0.3517927 0.4041406 0.4833927 0.7846644
[1] "SMC:  1232.6415782852"
[1] 0.3422894 0.5068385 0.5562136 0.6011088 0.7598965
[1] 0.2637180 0.3538592 0.4082177 0.4863507 0.7846644
[1] "SMC:  1528.83012007903"
[1] 0.3422894 0.4986145 0.5453394 0.5909029 0.7598965
[1] 0.2637180 0.3528618 0.4052154 0.4833927 0.7846644
[1] "SMC:  1378.10766547577"
[1] 0.3422894 0.5210950 0.5664996 0.6051666 0.7598965
[1] 0.2637180 0.3507257 0.4002485 0.4760981 0.7846644
[1] "SMC:  1483.48083172084"
[1] 0.3422894 0.5162041 0.5636015 0.6036374 0.7598965
[1] 0.2637180 0.3689129 0.4287647 0.5042651 0.7846644
[1] "SMC:  1615.19027277517"
[1] 0.3422894 0.5319268 0.5753828 0.6141589 0.7598965
[1] 0.2637180 0.3650391 0.4199651 0.4948816 0.7846644
[1] "SMC:  1626.63571645398"
[1] 0.3422894 0.5359417 0.5784892 0.6174233 0.7598965
[1] 0.2637180 0.3719804 0.4293996 0.5026519 0.7846644
[1] "SMC:  1646.31095749076"
[1] 0.3422894 0.5331945 0.5765806 0.6145024 0.7598965
[1] 0.2637180 0.3659610 0.4199651 0.4945506 0.7846644
[1] "SMC:  1610.99418167533"
[1] 0.3422894 0.5308736 0.5753828 0.6136386 0.7598965
[1] 0.2637180 0.3622299 0.4166657 0.4906157 0.7846644
[1] "SMC:  1585.19885274282"
[1] 0.3422894 0.5275924 0.5736340 0.6110412 0.7598965
[1] 0.2637180 0.3595333 0.4142197 0.4877687 0.7846644
[1] "SMC:  1560.11858330606"
[1] 0.3422894 0.5388908 0.5820098 0.6210476 0.7598965
[1] 0.2637180 0.3704089 0.4269452 0.4977233 0.7846644
[1] "SMC:  1623.77588318296"
[1] 0.3422894 0.5507664 0.5914141 0.6302687 0.7598965
[1] 0.2637180 0.3655776 0.4189269 0.4904478 0.7846644
[1] "SMC:  1565.52007584727"
[1] 0.3422894 0.5525315 0.5924953 0.6325276 0.7598965
[1] 0.2637180 0.3661470 0.4189269 0.4893043 0.7846644
[1] "SMC:  1549.21149230529"
[1] 0.3422894 0.5527904 0.5930703 0.6330156 0.7598965
[1] 0.2637180 0.3616122 0.4130382 0.4818608 0.7846644
[1] "SMC:  1519.21283921186"
acceptance rate:  0.768 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()	
> save(state_df, file = "state_df.RData")	
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
      user     system    elapsed 
2251486.10   19777.27  152646.63 
