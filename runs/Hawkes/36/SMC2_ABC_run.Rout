
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.0.0

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 20
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10, tp * 10 + 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 100
> Nx = 10000
> pacc = 0.0005
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans)
[1] 0.3032790 0.3884798 0.4531345 0.5634753 0.6901670
[1] 0.3034827 0.4218703 0.5123586 0.5905663 0.6992435
[1] "1. 84.5405860559111"
[1] 0.3032790 0.3936057 0.4531345 0.5604043 0.6901670
[1] 0.3034827 0.4182775 0.5081604 0.6067667 0.6992435
[1] "2. 69.875624875025"
[1] 0.3032790 0.3879239 0.4333930 0.5281056 0.6901670
[1] 0.3034827 0.3602810 0.4834814 0.5811107 0.6992435
[1] "3. 44.8303469848438"
[1] "resample"
[1] 0.2370353 0.3545741 0.4546936 0.5497023 0.8627835
[1] 0.2173286 0.3922684 0.4807182 0.5535656 1.0682963
[1] "SMC:  84.583415597236"
[1] 0.2367343 0.3603076 0.4552812 0.5314243 0.8627835
[1] 0.2173286 0.3903332 0.4782817 0.5519156 1.0682963
[1] "SMC:  63.4847177442992"
[1] 0.2367343 0.3304400 0.4256761 0.5092745 0.8627835
[1] 0.2173286 0.3798285 0.4671707 0.5399422 1.0682963
[1] "SMC:  52.5149759233006"
acceptance rate:  0.5 
[1] 0.3032790 0.3834649 0.4748767 0.5282717 0.6692529
[1] 0.3116785 0.3798285 0.4643942 0.5009723 0.6870691
[1] "4. 85.6951177876408"
[1] 0.3043403 0.3834649 0.4675965 0.5282717 0.6692529
[1] 0.3116785 0.3778430 0.4626252 0.5009723 0.6870691
[1] "5. 71.5560611576265"
[1] 0.3032790 0.3868459 0.4675965 0.5298480 0.6692529
[1] 0.3116785 0.3718866 0.4450738 0.5009723 0.6870691
[1] "6. 64.4430108469431"
[1] 0.3032790 0.3834649 0.4674770 0.5472190 0.6692529
[1] 0.3116785 0.3718866 0.4302160 0.4944874 0.6870691
[1] "7. 47.6599271076902"
[1] "resample"
[1] 0.1904200 0.3286238 0.4148785 0.5432872 0.8803908
[1] 0.2492799 0.3534581 0.4493691 0.5119383 0.9672421
[1] "SMC:  82.8932938125232"
[1] 0.1904200 0.3306808 0.4231005 0.5318400 0.8803908
[1] 0.2492799 0.3521873 0.4302198 0.5241855 0.9672421
[1] "SMC:  66.0666379794647"
[1] 0.1904200 0.3154531 0.3803792 0.4870407 0.8803908
[1] 0.2492799 0.3528040 0.4344275 0.5242979 0.9672421
[1] "SMC:  45.7746142783682"
[1] 0.1904200 0.3165961 0.3930636 0.4802134 0.8803908
[1] 0.2492799 0.3573674 0.4280690 0.5242698 0.9672421
[1] "SMC:  38.3211055269484"
[1] 0.1904200 0.3132602 0.4051996 0.4811357 0.8803908
[1] 0.2492799 0.3538743 0.4280690 0.5242698 0.9672421
[1] "SMC:  29.0808196308214"
[1] 0.1904200 0.3125292 0.3930636 0.5040489 0.8803908
[1] 0.2492799 0.3518789 0.4276924 0.5241855 0.9672421
[1] "SMC:  38.5387115974059"
[1] 0.1904200 0.3125292 0.3865781 0.5040595 0.8803908
[1] 0.2492799 0.3528040 0.4131662 0.5230137 0.9672421
[1] "SMC:  35.8730273825875"
acceptance rate:  0.56 
[1] 0.3019991 0.3433998 0.4222147 0.6091739 0.6334024
[1] 0.3116785 0.3515706 0.4173685 0.4782817 0.6605187
[1] "8. 84.0874371859296"
[1] 0.3019991 0.3478578 0.4222147 0.6091739 0.6334024
[1] 0.3116785 0.3515706 0.4215709 0.4750526 0.6605187
[1] "9. 66.6502189842946"
[1] 0.3019991 0.4148785 0.5092039 0.6221586 0.6334024
[1] 0.3116785 0.3515706 0.3798285 0.4626252 0.6605187
[1] "10. 55.6457938370666"
[1] 0.3019991 0.4148785 0.4222147 0.5746518 0.6334024
[1] 0.3116785 0.3501465 0.4131662 0.4688389 0.6605187
[1] "11. 51.1413399177681"
[1] 0.3019991 0.4148785 0.5092039 0.6221586 0.6334024
[1] 0.3116785 0.3515706 0.3777846 0.4801572 0.6605187
[1] "12. 38.8423875118993"
[1] "resample"
[1] 0.2544321 0.3637691 0.4519447 0.5449052 1.0577532
[1] 0.2428934 0.3692027 0.4338771 0.5143053 0.8054139
[1] "SMC:  78.9258668792348"
[1] 0.2544321 0.3619369 0.4501440 0.5254053 1.0577532
[1] 0.2631608 0.3587581 0.4221155 0.5079508 0.8054139
[1] "SMC:  60.5487075318627"
[1] 0.2544321 0.3430491 0.4239978 0.5109832 0.9316235
[1] 0.2395088 0.3414355 0.4221155 0.4880480 0.8054139
[1] "SMC:  40.0990413447936"
[1] 0.2544321 0.3301154 0.4239363 0.5109832 0.9316235
[1] 0.2395088 0.3414355 0.4221155 0.4951744 0.8054139
[1] "SMC:  38.8791171211357"
[1] 0.2544321 0.3619369 0.4247738 0.5109832 0.9316235
[1] 0.2395088 0.3414355 0.4221155 0.4880480 0.8054139
[1] "SMC:  36.4854428037325"
[1] 0.2655539 0.3720336 0.4239978 0.5118021 0.9316235
[1] 0.2395088 0.3317129 0.4221155 0.4858953 0.8054139
[1] "SMC:  29.9966048617857"
[1] 0.2655539 0.3619369 0.4239363 0.5109832 0.9316235
[1] 0.2395088 0.3425140 0.4221155 0.4625828 0.8054139
[1] "SMC:  26.832947618225"
[1] 0.2544321 0.3619369 0.4239978 0.5109832 0.9316235
[1] 0.2395088 0.3414355 0.4126601 0.4560546 0.8054139
[1] "SMC:  21.9241200781289"
[1] 0.2655539 0.3619369 0.4499425 0.5191058 0.9316235
[1] 0.2395088 0.3219902 0.3897570 0.4560546 0.8054139
[1] "SMC:  20.3370028031341"
[1] 0.2867767 0.4255497 0.4748596 0.5233263 0.9316235
[1] 0.2395088 0.3113729 0.3517387 0.4553351 0.7274187
[1] "SMC:  17.5019960684695"
[1] 0.2823080 0.3619369 0.4255497 0.5109832 0.9316235
[1] 0.2395088 0.3365742 0.4221155 0.4560546 0.7274187
[1] "SMC:  10.9840893710879"
[1] 0.2867767 0.3651752 0.4500620 0.5449052 0.9316235
[1] 0.2876654 0.3457494 0.4410320 0.4876755 0.7274187
[1] "SMC:  13.2294780197041"
acceptance rate:  0.49 
[1] 0.3309139 0.4251310 0.4679597 0.5825398 0.6334024
[1] 0.3154085 0.3515706 0.4126601 0.4626252 0.6461436
[1] "13. 80.7336764232872"
[1] 0.3309139 0.4193767 0.4679597 0.6091739 0.6334024
[1] 0.3113729 0.3515706 0.4126601 0.4560546 0.6461436
[1] "14. 68.6043356292229"
[1] 0.3019991 0.4148785 0.4679597 0.6091739 0.6334024
[1] 0.3113729 0.3515706 0.4126601 0.4560546 0.6461436
[1] "15. 54.0701697914996"
[1] 0.3019991 0.4148785 0.4679597 0.6091739 0.6334024
[1] 0.3113729 0.3515706 0.4173878 0.4625892 0.6461436
[1] "16. 51.1420199143162"
[1] 0.3019991 0.3748900 0.4500620 0.5746518 0.6334024
[1] 0.3113729 0.3515706 0.4498578 0.4626252 0.6461436
[1] "17. 49.7751694907232"
[1] "resample"
[1] 0.2862519 0.3581964 0.4866142 0.5732657 0.9744004
[1] 0.2477459 0.3289699 0.4094685 0.4953818 0.7544494
[1] "SMC:  80.283185840708"
[1] 0.2862519 0.3580786 0.4771748 0.5863611 0.9744004
[1] 0.2401236 0.3260340 0.4045901 0.4937850 0.7544494
[1] "SMC:  67.9723881379021"
[1] 0.2862519 0.3516941 0.4303073 0.5496161 0.8067270
[1] 0.2477459 0.3293675 0.4062167 0.5144885 0.7544494
[1] "SMC:  53.4870588140568"
[1] 0.2862519 0.3332857 0.3853413 0.5473824 0.8067270
[1] 0.2401236 0.3367240 0.4047477 0.4967315 0.7544494
[1] "SMC:  47.1621164093028"
[1] 0.2862519 0.3332857 0.3783924 0.5158835 0.8067270
[1] 0.2477459 0.3446930 0.4003449 0.4857426 0.7544494
[1] "SMC:  32.1469301899249"
[1] 0.2862519 0.3327484 0.3820286 0.5377529 0.8067270
[1] 0.2401236 0.3405265 0.3874732 0.4737617 0.7544494
[1] "SMC:  28.6634276985354"
[1] 0.2862519 0.3232379 0.3820286 0.5353799 0.8067270
[1] 0.2508734 0.3453385 0.3778604 0.4716458 0.7544494
[1] "SMC:  22.275850960439"
[1] 0.2862519 0.3187938 0.3624148 0.5053642 0.8067270
[1] 0.2508734 0.3453385 0.3778604 0.4712249 0.7544494
[1] "SMC:  17.4184562296732"
[1] 0.2862519 0.3206852 0.3820286 0.5471157 0.8067270
[1] 0.2715318 0.3453385 0.3778604 0.4660176 0.7544494
[1] "SMC:  22.692246986037"
[1] 0.2885782 0.3820286 0.5353799 0.6375726 0.8067270
[1] 0.2401236 0.3289699 0.3778604 0.4523083 0.7544494
[1] "SMC:  26.1607515435418"
[1] 0.2862519 0.3663238 0.5021347 0.6008510 0.8067270
[1] 0.2891269 0.3455034 0.3874732 0.4598538 0.7544494
[1] "SMC:  25.2044076001802"
[1] 0.2885782 0.4470450 0.5471157 0.6433607 0.8067270
[1] 0.3001490 0.3601492 0.3974110 0.4636265 0.7544494
[1] "SMC:  18.9714224766197"
[1] 0.3181298 0.5377529 0.5481828 0.6537812 0.8067270
[1] 0.3001490 0.3601492 0.3874732 0.4408267 0.7544494
[1] "SMC:  15.226023711725"
[1] 0.3181298 0.5004462 0.5471157 0.6375726 0.8067270
[1] 0.3001490 0.3601492 0.3874732 0.4523083 0.7544494
[1] "SMC:  14.0680659504876"
[1] 0.3181298 0.5365664 0.5471157 0.6394542 0.8067270
[1] 0.3001490 0.3601492 0.3874732 0.4775798 0.7544494
[1] "SMC:  11.084363105228"
[1] 0.3181298 0.5377529 0.5471157 0.6306280 0.8067270
[1] 0.3001490 0.3601492 0.3874732 0.4288526 0.7544494
[1] "SMC:  8.29087916164204"
[1] 0.2904778 0.5377529 0.5471157 0.6237867 0.8067270
[1] 0.3001490 0.3645770 0.3874732 0.4281467 0.7544494
[1] "SMC:  6.41688169872399"
acceptance rate:  0.73 
[1] 0.3181298 0.5377529 0.5471157 0.5473824 0.6874919
[1] 0.3219902 0.3874732 0.3874732 0.4032788 0.5738731
[1] "18. 77.1124423963134"
[1] 0.3181298 0.5447750 0.5471157 0.5481828 0.6874919
[1] 0.3219902 0.3874732 0.3874732 0.4032788 0.5738731
[1] "19. 60.7013101948939"
[1] 0.3181298 0.5471157 0.5471157 0.5481828 0.6874919
[1] 0.3238561 0.3874732 0.3874732 0.4032788 0.5738731
[1] "20. 48.5377331250439"
[1] "resample"
[1] 0.2459541 0.4276535 0.5253145 0.6048726 0.9280045
[1] 0.3110130 0.3598292 0.3953543 0.4437605 0.6968890
[1] "SMC:  80.5294117647059"
[1] 0.2459541 0.4331405 0.5229843 0.6020253 0.9280045
[1] 0.3110130 0.3586835 0.3942795 0.4400454 0.6968890
[1] "SMC:  70.044154881739"
[1] 0.2459541 0.4065319 0.4825673 0.5701021 0.9280045
[1] 0.3059220 0.3576333 0.3883937 0.4325106 0.6968890
[1] "SMC:  53.6392117183474"
[1] 0.2284445 0.3955841 0.4596106 0.5623087 0.9280045
[1] 0.3059220 0.3471817 0.3896911 0.4325106 0.6968890
[1] "SMC:  46.6897155498259"
[1] 0.2459541 0.3998363 0.4714118 0.5623087 0.9280045
[1] 0.3059220 0.3435805 0.3826255 0.4299817 0.6968890
[1] "SMC:  41.2738359297784"
[1] 0.2459541 0.4065319 0.4714118 0.5708127 0.9280045
[1] 0.3132692 0.3435805 0.3834561 0.4177154 0.6968890
[1] "SMC:  33.2399137667645"
[1] 0.2938341 0.4131841 0.4717491 0.5736257 0.9280045
[1] 0.3110130 0.3435805 0.3877660 0.4260276 0.6968890
[1] "SMC:  36.4797757350149"
[1] 0.2459541 0.4024921 0.4646459 0.5432861 0.9280045
[1] 0.3132692 0.3435805 0.3860968 0.4239895 0.6968890
[1] "SMC:  26.0327287153046"
[1] 0.2938341 0.4454886 0.4714118 0.5640281 0.9280045
[1] 0.3110130 0.3323894 0.3790692 0.4321332 0.6968890
[1] "SMC:  25.8347060966254"
[1] 0.3221494 0.4501416 0.4827091 0.5701021 0.9280045
[1] 0.3132692 0.3435805 0.3826255 0.4366796 0.6968890
[1] "SMC:  25.0576191683223"
[1] 0.2459541 0.4065319 0.4680289 0.5371214 0.9280045
[1] 0.3132692 0.3589195 0.3953543 0.4371244 0.6968890
[1] "SMC:  18.5575317939029"
[1] 0.3831712 0.4585291 0.4646459 0.5373241 0.9280045
[1] 0.3132692 0.3596275 0.4165546 0.4548488 0.6968890
[1] "SMC:  15.8172310033117"
[1] 0.3831712 0.4585291 0.5144777 0.5572589 0.9280045
[1] 0.3132692 0.3584550 0.4023556 0.4371244 0.6968890
[1] "SMC:  19.1494563660098"
[1] 0.3682812 0.4585291 0.4825673 0.5572589 0.9280045
[1] 0.3110130 0.3323894 0.4023556 0.4367506 0.6968890
[1] "SMC:  14.0683522838801"
[1] 0.2949739 0.4585291 0.4825673 0.5572589 0.9280045
[1] 0.3132692 0.3467765 0.4023556 0.4371244 0.6968890
[1] "SMC:  15.6845353438817"
[1] 0.3831712 0.4585291 0.5144777 0.5623087 0.9280045
[1] 0.3132692 0.3371135 0.3826255 0.4371244 0.6968890
[1] "SMC:  13.3093199506493"
[1] 0.3831712 0.4585291 0.4714118 0.5373241 0.9280045
[1] 0.3132692 0.3278458 0.3800045 0.4371244 0.6968890
[1] "SMC:  8.99627262978547"
[1] 0.3831712 0.4204747 0.4585291 0.5360597 0.9280045
[1] 0.3132692 0.3264784 0.3591555 0.4306177 0.6968890
[1] "SMC:  7.93483408665055"
[1] 0.3844315 0.4585291 0.4714118 0.5373241 0.9280045
[1] 0.3264784 0.3467765 0.3773835 0.4325106 0.6968890
[1] "SMC:  9.59134252753082"
[1] 0.3844315 0.3955841 0.4585291 0.5373241 0.9280045
[1] 0.3250628 0.3467765 0.3596275 0.4306177 0.6968890
[1] "SMC:  9.0833153488281"
acceptance rate:  0.18 
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()
> save(state_df, file = "state_df.RData")
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
     user    system   elapsed 
68145.109   558.089  5183.407 
