
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(parallel)
> library(StateSpaceInference)
> library(ggplot2)
> library(ggalt)
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: SUSE Linux Enterprise Server 12 SP2

Matrix products: default
BLAS/LAPACK: /pkg/suse12/software/openblas/0.2.20-gcc-6.4.0-2.28/lib/libopenblas_sandybridgep-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] ggalt_0.4.0               ggplot2_3.1.0            
[3] StateSpaceInference_1.2.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0         Rttf2pt1_1.3.7     bindr_0.1.1        magrittr_1.5      
 [5] maps_3.3.0         MASS_7.3-51.1      tidyselect_0.2.5   munsell_0.5.0     
 [9] colorspace_1.3-2   R6_2.3.0           rlang_0.3.0.1      plyr_1.8.4        
[13] dplyr_0.7.8        grid_3.5.1         gtable_0.2.0       ash_1.0-15        
[17] KernSmooth_2.23-15 extrafontdb_1.0    withr_2.1.2        proj4_1.0-8       
[21] lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2       crayon_1.3.4      
[25] bindrcpp_0.2.2     RColorBrewer_1.1-2 purrr_0.2.5        glue_1.3.0        
[29] compiler_3.5.1     pillar_1.3.0       scales_1.0.0       extrafont_0.17    
[33] pkgconfig_2.0.2   
> 
> #cl <- makeCluster(parallel::detectCores())
> cl = "mclapply"
> #cl <- NULL
> 
> set.seed(3)
> 
> TT <- 40
> true_theta <- c(0.5, 0.5)
> lower <- 0
> upper <- 3.5
> sd_t <- 1
> init <- min(rgamma(1, 100, 100), upper - 1)
> a_logit <- 0.9
> dist_coef <- 0.5
> true_states <- generate_state(init, TT, lower, upper, sd_t, a = a_logit)
> 
> y <- NULL
> 
> #y <- hawkes_simulator(true_states[1], true_theta, NULL, 0, 10)
> for(tp in 1:TT){
+   y <- hawkes_simulator(true_states[tp], true_theta, y$history, tp * 10 - 10, tp * 10)
+ }
> 
> y_history <- y$history
> 
> lambda_fun <- stepfun(seq(10, TT*10 - 10, by = 10), y = true_states)
> kern <- function(x){return(decay_func(x, alpha = true_theta[1], delta = true_theta[2]))}
> #
> #y_history <- sim_hawkes(lambda_fun, NULL, kern, 0, TT*10, progressBar = FALSE)
> #y <- hist(y_history, breaks = seq(0, TT*10, by = 10), plot = FALSE)$counts
> 
> hist(y_history, breaks = TT * 10)
> 
> plot(lambda_fun, add = TRUE, col = "red")
> 
> simulator <- hawkes_simulator
> 
> inp <- list(
+   lower = lower,
+   upper = upper,
+   sd_t = sd_t,
+   a_logit = a_logit,
+   history = y_history,
+   simulator = simulator
+ )
> 
> loss = loss_hawkes
> 
> 
> Ntheta = 20
> Nx = 10000
> pacc = 0.02
> 
> lower_theta <- c(0.3, 0.3)
> upper_theta <- c(0.7, 0.7)
> 
> prior_sample <- data.frame(theta1 = runif(Ntheta, lower_theta[1], upper_theta[1]), theta2 = runif(Ntheta, lower_theta[2], upper_theta[2]))
> 
> prior_sample <- as.matrix(prior_sample, ncol = 2)
> 
> trans <- function(x, trans_args){
+   theta1 <- log(x[,1])
+   theta2 <- log(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> invtrans <- function(x, trans_args){
+   theta1 <- exp(x[,1])
+   theta2 <- exp(x[,2])
+   return(cbind(theta1, theta2))
+ }
> 
> full_list <- SMC2_ABC(prior_sample, dprior = dHawkes, loss, loss_args = inp, Ntheta = Ntheta, Nx = Nx, pacc = pacc, cl = cl, dt = 10, ESS_threshold = 0.5, TT = TT, trans = trans, invtrans = invtrans, cov_coef = 0.25^2)
[1] 0.3568802 0.4381908 0.5474742 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4944388 0.5701068 0.6816734
[1] "1. 19.0953597753262"
[1] 0.3568802 0.4164819 0.5081570 0.5554018 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5701068 0.6816734
[1] "2. 16.8999415866452"
[1] 0.3568802 0.4164819 0.4983938 0.5548750 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.5524578 0.6816734
[1] "3. 15.0867828577316"
[1] 0.3568802 0.4164819 0.4983938 0.5548750 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.5096879 0.6816734
[1] "4. 14.2619660958967"
[1] 0.3568802 0.4164819 0.4983938 0.5528123 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.5083512 0.6816734
[1] "5. 13.390593134337"
[1] 0.3568802 0.3663803 0.4673236 0.5474742 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.5030531 0.6816734
[1] "6. 11.8193302959044"
[1] 0.3568802 0.3663803 0.4673236 0.5474742 0.6752905
[1] 0.3308989 0.3531863 0.4285804 0.4944388 0.6816734
[1] "7. 11.4097436636169"
[1] 0.3568802 0.4164819 0.4983938 0.5554018 0.6752905
[1] 0.3308989 0.3768593 0.4365074 0.5524578 0.6816734
[1] "8. 15.6002907611581"
[1] 0.3568802 0.4381908 0.5125830 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5524578 0.6816734
[1] "9. 16.435319205833"
[1] 0.3568802 0.4381908 0.5125830 0.5649632 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5524578 0.6816734
[1] "10. 16.546944262483"
[1] 0.3568802 0.4381908 0.5125830 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4615614 0.5701068 0.6816734
[1] "11. 17.1160204870653"
[1] 0.3568802 0.4673236 0.5474742 0.5674306 0.6752905
[1] 0.3308989 0.3899926 0.4615614 0.5701068 0.6816734
[1] "12. 17.4081641292812"
[1] 0.3568802 0.4381908 0.5125830 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4615614 0.5524578 0.6816734
[1] "13. 16.9087233785438"
[1] 0.3568802 0.4381908 0.5125830 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5524578 0.6816734
[1] "14. 16.7585657921128"
[1] 0.3568802 0.4673236 0.5474742 0.5674306 0.6752905
[1] 0.3308989 0.3899926 0.4615614 0.5524578 0.6816734
[1] "15. 17.0132059021613"
[1] 0.3568802 0.4381908 0.5125830 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5524578 0.6816734
[1] "16. 16.0389357130279"
[1] 0.3568802 0.4381908 0.5125830 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5096879 0.6816734
[1] "17. 15.9793637560966"
[1] 0.3568802 0.4381908 0.5081570 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5083512 0.6816734
[1] "18. 15.2541971019647"
[1] 0.3568802 0.4164819 0.5081570 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4365074 0.5083512 0.6816734
[1] "19. 14.9104918462341"
[1] 0.3568802 0.4164819 0.4983938 0.5674306 0.6752905
[1] 0.3308989 0.3768593 0.4365074 0.5083512 0.6816734
[1] "20. 14.2425725450147"
[1] 0.3568802 0.4164819 0.4983938 0.5649632 0.6752905
[1] 0.3308989 0.3768593 0.4365074 0.5083512 0.6816734
[1] "21. 13.4120931362952"
[1] 0.3568802 0.4164819 0.4983938 0.5649632 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.4944388 0.6816734
[1] "22. 12.6943718547574"
[1] 0.3568802 0.4164819 0.4983938 0.5649632 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.4944388 0.6816734
[1] "23. 12.4944893581231"
[1] 0.3568802 0.4164819 0.4983938 0.5649632 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.4944388 0.6816734
[1] "24. 13.0571646467324"
[1] 0.3568802 0.4164819 0.4983938 0.5548750 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.4944388 0.6816734
[1] "25. 12.4475821108882"
[1] 0.3568802 0.4164819 0.4673236 0.5548750 0.6752905
[1] 0.3308989 0.3531863 0.4285804 0.4944388 0.6816734
[1] "26. 11.9067039283495"
[1] 0.3568802 0.3663803 0.4673236 0.5474742 0.6752905
[1] 0.3308989 0.3531863 0.4285804 0.4944388 0.6816734
[1] "27. 11.0639389017584"
[1] 0.3568802 0.4673236 0.5125830 0.5728284 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5030531 0.6816734
[1] "28. 13.7315972965936"
[1] 0.3568802 0.4381908 0.5081570 0.5674306 0.6752905
[1] 0.3308989 0.3531863 0.4365074 0.5030531 0.6816734
[1] "29. 13.1654180713461"
[1] 0.3568802 0.4983938 0.5528123 0.5728284 0.6752905
[1] 0.3308989 0.3768593 0.4382752 0.5083512 0.6816734
[1] "30. 12.5177013877744"
[1] 0.3568802 0.4983938 0.5548750 0.5910605 0.6752905
[1] 0.3308989 0.3899926 0.4615614 0.5524578 0.6816734
[1] "31. 14.1842885382708"
[1] 0.3568802 0.5081570 0.5674306 0.5910605 0.6752905
[1] 0.3308989 0.3899926 0.4615614 0.5096879 0.6816734
[1] "32. 12.8862430868331"
[1] 0.3568802 0.5125830 0.5674306 0.5910605 0.6752905
[1] 0.3308989 0.4285804 0.4615614 0.5096879 0.6816734
[1] "33. 12.7627958281418"
[1] 0.3568802 0.5081570 0.5674306 0.5910605 0.6752905
[1] 0.3308989 0.4285804 0.4615614 0.5096879 0.6816734
[1] "34. 12.102918923104"
[1] 0.3568802 0.5081570 0.5674306 0.5910605 0.6752905
[1] 0.3308989 0.3899926 0.4382752 0.5083512 0.6816734
[1] "35. 11.6293997346105"
[1] 0.3568802 0.5081570 0.5674306 0.5910605 0.6752905
[1] 0.3308989 0.3899926 0.4382752 0.5083512 0.6816734
[1] "36. 11.3432241950834"
[1] 0.3568802 0.5474742 0.5674306 0.5910605 0.6752905
[1] 0.3308989 0.4285804 0.4615614 0.5096879 0.6816734
[1] "37. 10.7813521579627"
[1] 0.3568802 0.5491699 0.5728284 0.5910605 0.6752905
[1] 0.3308989 0.4285804 0.4382752 0.5096879 0.6816734
[1] "38. 9.25264142455603"
[1] "resample"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4558889 0.5183504 0.6076699
[1] "SMC:  19.7777904348119"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4558889 0.5183504 0.6076699
[1] "SMC:  19.3479423440343"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  19.124853942352"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4076108 0.4497119 0.5183504 0.6076699
[1] "SMC:  18.8021048085268"
[1] 0.4393575 0.5553294 0.5719494 0.5862259 0.6159836
[1] 0.3810588 0.4076108 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.2386521304617"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4076108 0.4497119 0.5060554 0.6076699
[1] "SMC:  17.8505010796079"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4076108 0.4439652 0.5060554 0.6076699
[1] "SMC:  17.4555796032217"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  18.3489134966479"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4076108 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.2389199863811"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  18.2137708995966"
[1] 0.4393575 0.5553294 0.5697460 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4558889 0.5183504 0.6076699
[1] "SMC:  18.6566318873751"
[1] 0.4393575 0.5553294 0.5697460 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  18.5815050422818"
[1] 0.4393575 0.5553294 0.5697460 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  18.3844485633688"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.4357505104531"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.5217812709484"
[1] 0.4393575 0.5553294 0.5719494 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.326471630997"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.2390266847569"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  18.0007595829244"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  17.9953463110219"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  17.7710617899735"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  17.6158396096175"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.5060554 0.6076699
[1] "SMC:  17.195998457409"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.5060554 0.6076699
[1] "SMC:  17.2009701570608"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  17.3743001117481"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  16.9389963174465"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  16.9429894962263"
[1] 0.4393575 0.5553294 0.5719494 0.5862259 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5183504 0.6076699
[1] "SMC:  16.7785716935843"
[1] 0.4393575 0.5553294 0.5719494 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.5060554 0.6076699
[1] "SMC:  17.0780096710677"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  16.9939645841688"
[1] 0.4393575 0.5590623 0.5737701 0.5927156 0.6159836
[1] 0.3810588 0.4076108 0.4439652 0.4937357 0.6076699
[1] "SMC:  16.3598506392361"
[1] 0.4393575 0.5553294 0.5719494 0.5872004 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5060554 0.6076699
[1] "SMC:  17.0053444251956"
[1] 0.4393575 0.5590623 0.5737701 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.5019232 0.6076699
[1] "SMC:  16.685376330149"
[1] 0.4393575 0.5590623 0.5737701 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4497119 0.4937357 0.6076699
[1] "SMC:  16.1801469367343"
[1] 0.4393575 0.5590623 0.5737701 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.4937357 0.6076699
[1] "SMC:  15.9775163154271"
[1] 0.4393575 0.5590623 0.5737701 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.4860754 0.6076699
[1] "SMC:  15.5217373276332"
[1] 0.4393575 0.5590623 0.5737701 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.4860754 0.6076699
[1] "SMC:  15.375825221203"
[1] 0.4393575 0.5590623 0.5802919 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.4860754 0.6076699
[1] "SMC:  14.855944657521"
[1] 0.4393575 0.5590623 0.5802919 0.5927156 0.6159836
[1] 0.3810588 0.4254955 0.4439652 0.4860754 0.6076699
[1] "SMC:  14.3349174981546"
acceptance rate:  0.55 
[1] 0.5439465 0.5553294 0.5910605 0.5910605 0.6098064
[1] 0.3810588 0.4321423 0.4382752 0.4497119 0.6076699
[1] "39. 19.9240892200715"
[1] 0.5439465 0.5692788 0.5910605 0.5910605 0.6098064
[1] 0.3810588 0.4254955 0.4382752 0.4497119 0.6076699
[1] "40. 19.8574433722254"
There were 50 or more warnings (use warnings() to see the first 50)
> 
> state_df <- get_state(full_list, probs = c(0.25, 0.5, 0.75))
> 
> state_df$state <- true_states
> 
> theta_df <- get_parameter(full_list)
> 
> 
> save.image()	
> save(state_df, file = "state_df.RData")	
> save(theta_df, file = "theta_df.RData")
> 
> 
> 
> ggplot(state_df) + aes(x = time, y = state, ymin = lower, ymax = upper) + geom_step() + geom_ribbon(alpha = 0.2, stat = "stepribbon", fill = "red") + geom_step(mapping = aes(x = time, y = med), col = "red") + ggthemes::theme_base() + scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(expand = c(0, 0))
> 
> ggplot(theta_df[which(theta_df$time %% 5 == 0),]) + aes(x = value, weights = weight, col = factor(time)) + geom_density() + facet_wrap(~parameter, scales = "free")
> 
> proc.time()
     user    system   elapsed 
17189.025   283.623  1779.580 
